{"glance_glare": {"user_password": "mYzmLhW9hk1voCuv9ipkRBaO"}, "libvirt_type": "qemu", "puppet": {"modules": "rsync://10.109.0.2:/puppet/liberty-9.0/modules/", "manifests": "rsync://10.109.0.2:/puppet/liberty-9.0/manifests/"}, "mysql": {"root_password": "AdnIXQytypRsqulqaR38uQbX", "wsrep_password": "9mG6JvFKzwRNGm7oqly8CAlj"}, "fail_if_error": true, "user_node_name": "slave-01_controller", "glance": {"db_password": "qmHq3YscDyGOYxFaP0YP9oVG", "user_password": "NhwtVEdiYAt5HOOWasXenzLk", "image_cache_max_size": "9405726720"}, "uid": "2", "quantum_settings": {"default_floating_net": "admin_floating_net", "database": {"passwd": "p5fcogniUc0e2P1cg8na7OSJ"}, "default_private_net": "admin_internal_net", "keystone": {"admin_password": "i70OskmcslTHwCf5M7My3ubq"}, "L3": {"use_namespaces": true}, "L2": {"phys_nets": {"physnet2": {"bridge": "br-prv", "vlan_range": "1000:1030"}, "physnet1": {"bridge": "br-floating", "vlan_range": null}}, "base_mac": "fa:16:3e:00:00:00", "segmentation_type": "vlan"}, "predefined_networks": {"admin_floating_net": {"shared": false, "L2": {"router_ext": true, "network_type": "flat", "physnet": "physnet1", "segment_id": null}, "L3": {"nameservers": [], "subnet": "10.109.3.0/24", "floating": ["10.109.3.128:10.109.3.254"], "gateway": "10.109.3.1", "enable_dhcp": false}, "tenant": "neutronOneController"}, "admin_internal_net": {"shared": false, "L2": {"router_ext": false, "network_type": "vlan", "physnet": "physnet2", "segment_id": null}, "L3": {"nameservers": ["8.8.4.4", "8.8.8.8"], "subnet": "10.109.4.0/24", "floating": null, "gateway": "10.109.4.1", "enable_dhcp": true}, "tenant": "neutronOneController"}}, "metadata": {"metadata_proxy_shared_secret": "u6V12DZwYFSJRLUTKR7eDHoS"}}, "operator_user": {"password": "egXpoQxbt5rxvDt0shCrcU9n", "name": "fueladmin", "sudo": "ALL=(ALL) NOPASSWD: ALL", "homedir": "/home/fueladmin", "authkeys": "", "metadata": {"group": "general", "weight": 15, "label": "Operating System Access"}}, "cgroups": {"metadata": {"restrictions": [{"action": "hide", "condition": "true"}], "group": "general", "always_editable": true, "weight": 90, "label": "Cgroups conguration for services"}}, "swift": {"user_password": "FjWpLVEUceHSgKq2yQX56zvP"}, "aodh": {"db_password": "N7kBTnxB5N236as6CdveS06l", "user_password": "5TS3MmxEGwYAbEIqPNFcsewe"}, "nova": {"db_password": "66ygvPZrh2nuePHIOaAvSEGJ", "user_password": "UTdsK4xlZcGmZ7EZkjFDJi0k", "state_path": "/var/lib/nova", "enable_hugepages": false}, "nodes": [{"storage_netmask": "255.255.255.0", "name": "node-2", "public_address": "10.109.3.4", "internal_netmask": "255.255.255.0", "fqdn": "node-2.test.domain.local", "role": "primary-controller", "public_netmask": "255.255.255.0", "internal_address": "10.109.1.4", "storage_address": "10.109.2.2", "user_node_name": "slave-01_controller", "swift_zone": "2", "uid": "2"}, {"storage_netmask": "255.255.255.0", "name": "node-3", "internal_netmask": "255.255.255.0", "fqdn": "node-3.test.domain.local", "role": "compute", "internal_address": "10.109.1.5", "storage_address": "10.109.2.3", "user_node_name": "slave-02_compute", "swift_zone": "3", "uid": "3"}], "auto_assign_floating_ip": false, "node_volumes": [{"name": "vda", "volumes": [{"type": "boot", "size": 300}, {"mount": "/boot", "type": "raid", "file_system": "ext2", "name": "Boot", "size": 200}, {"type": "lvm_meta_pool", "size": 64}, {"size": 19520, "type": "pv", "lvm_meta_size": 64, "vg": "os"}, {"size": 10304, "type": "pv", "lvm_meta_size": 64, "vg": "logs"}, {"size": 20544, "type": "pv", "lvm_meta_size": 64, "vg": "mysql"}, {"size": 268, "type": "pv", "lvm_meta_size": 64, "vg": "horizon"}, {"size": 0, "type": "pv", "lvm_meta_size": 0, "vg": "image"}], "extra": ["disk/by-id/virtio-5c5ba6c45fd6411b9d1d"], "size": 51200, "type": "disk", "id": "vda", "free_space": 50380}, {"name": "vdb", "volumes": [{"type": "boot", "size": 300}, {"mount": "/boot", "type": "raid", "file_system": "ext2", "name": "Boot", "size": 200}, {"type": "lvm_meta_pool", "size": 192}, {"size": 0, "type": "pv", "lvm_meta_size": 0, "vg": "os"}, {"size": 0, "type": "pv", "lvm_meta_size": 0, "vg": "logs"}, {"size": 0, "type": "pv", "lvm_meta_size": 0, "vg": "mysql"}, {"size": 11124, "type": "pv", "lvm_meta_size": 64, "vg": "horizon"}, {"size": 39384, "type": "pv", "lvm_meta_size": 64, "vg": "image"}], "extra": ["disk/by-id/virtio-36eea623d3e24e808374"], "size": 51200, "type": "disk", "id": "vdb", "free_space": 50380}, {"name": "vdc", "volumes": [{"type": "boot", "size": 300}, {"mount": "/boot", "type": "raid", "file_system": "ext2", "name": "Boot", "size": 200}, {"type": "lvm_meta_pool", "size": 256}, {"size": 0, "type": "pv", "lvm_meta_size": 0, "vg": "os"}, {"size": 0, "type": "pv", "lvm_meta_size": 0, "vg": "logs"}, {"size": 0, "type": "pv", "lvm_meta_size": 0, "vg": "mysql"}, {"size": 0, "type": "pv", "lvm_meta_size": 0, "vg": "horizon"}, {"size": 50444, "type": "pv", "lvm_meta_size": 64, "vg": "image"}], "extra": ["disk/by-id/virtio-5f0f20028c674f1b9382"], "size": 51200, "type": "disk", "id": "vdc", "free_space": 50380}, {"min_size": 19456, "volumes": [{"mount": "/", "type": "lv", "file_system": "ext4", "name": "root", "size": 15360}, {"mount": "swap", "type": "lv", "file_system": "swap", "name": "swap", "size": 4096}], "type": "vg", "_allocate_size": "min", "id": "os", "label": "Base System"}, {"min_size": 10240, "volumes": [{"mount": "/var/log", "type": "lv", "file_system": "ext4", "name": "log", "size": 10240}], "type": "vg", "_allocate_size": "min", "id": "logs", "label": "Logs"}, {"min_size": 5120, "volumes": [{"mount": "/var/lib/glance", "type": "lv", "file_system": "xfs", "name": "glance", "size": 89700}], "type": "vg", "_allocate_size": "all", "id": "image", "label": "Image Storage"}, {"min_size": 20480, "volumes": [{"mount": "/var/lib/mysql", "type": "lv", "file_system": "ext4", "name": "root", "size": 20480}], "type": "vg", "_allocate_size": "min", "id": "mysql", "label": "Mysql Database"}, {"min_size": 11264, "volumes": [{"mount": "/var/lib/horizon", "type": "lv", "file_system": "xfs", "name": "horizontmp", "size": 11264}], "type": "vg", "_allocate_size": "min", "id": "horizon", "label": "Horizon Temp Storage"}], "external_ntp": {"ntp_list": ["0.fuel.pool.ntp.org", "1.fuel.pool.ntp.org", "2.fuel.pool.ntp.org"], "metadata": {"group": "network", "weight": 40, "label": "Host OS NTP Servers"}}, "dpdk": {}, "task_deploy": true, "heat": {"db_password": "m262nPaXlsxlII8kLTGuu3Er", "user_password": "XS6Iw3w5R9BFFgTACu8Q5l9n", "enabled": true, "auth_encryption_key": "fd879651d50e4e90c8bca669a500cad5", "rabbit_password": "pjVbQAMbRwOdxC3IyddlWwOX"}, "vms_conf": [], "fuel_version": "9.0", "rabbit": {"password": "WzzEQ2dRE4VVSui9Z24SuJrL"}, "resume_guests_state_on_host_boot": true, "provision": {"image_data": {"/boot": {"container": "gzip", "uri": "http://10.109.0.2:8080/targetimages/env_1_ubuntu_1404_amd64-boot.img.gz", "format": "ext2"}, "/": {"container": "gzip", "uri": "http://10.109.0.2:8080/targetimages/env_1_ubuntu_1404_amd64.img.gz", "format": "ext4"}}, "codename": "trusty", "packages": "acl\nanacron\nbash-completion\nbridge-utils\nbsdmainutils\nbuild-essential\ncloud-init\ncurl\ndaemonize\ndebconf-utils\ngdisk\ngrub-pc\nhpsa-dkms\nhwloc\ni40e-dkms\nlinux-firmware\nlinux-firmware-nonfree\nlinux-headers-generic-lts-trusty\nlinux-image-generic-lts-trusty\nlvm2\nmcollective\nmdadm\nmultipath-tools\nmultipath-tools-boot\nnailgun-agent\nnailgun-mcagents\nnetwork-checker\nntp\nopenssh-client\nopenssh-server\npuppet\npython-amqp\nruby-augeas\nruby-ipaddress\nruby-json\nruby-netaddr\nruby-openstack\nruby-shadow\nruby-stomp\ntelnet\nubuntu-minimal\nubuntu-standard\nuuid-runtime\nvim\nvirt-what\nvlan\n", "method": "image", "metadata": {"restrictions": [{"action": "hide", "condition": "false"}], "group": "general", "weight": 80, "label": "Provision"}}, "neutron_advanced_configuration": {"neutron_qos": false, "neutron_l3_ha": false, "neutron_dvr": false, "neutron_l2_pop": false, "metadata": {"restrictions": [{"action": "hide", "condition": "cluster:net_provider != 'neutron'"}], "group": "network", "weight": 20, "label": "Neutron Advanced Configuration"}}, "base_syslog": {"syslog_port": "514", "syslog_server": "10.109.0.2"}, "storage_network_range": "10.109.2.0/24", "roles": ["primary-controller"], "syslog": {"syslog_port": "514", "syslog_transport": "tcp", "syslog_server": "", "metadata": {"enabled": false, "group": "logging", "toggleable": true, "weight": 50, "label": "Syslog"}}, "puppet_debug": true, "public_ssl": {"horizon": true, "services": true, "hostname": "public.fuel.local", "cert_data": {"content": "-----BEGIN CERTIFICATE-----\nMIIC7TCCAdUCAgPoMA0GCSqGSIb3DQEBBQUAMDwxHjAcBgNVBAsMFU1pcmFudGlz\nIEZ1ZWwtUUEgVGVhbTEaMBgGA1UEAwwRcHVibGljLmZ1ZWwubG9jYWwwHhcNMTYw\nMzMwMTEzMjQwWhcNMjYwMzI4MTEzMjQwWjA8MR4wHAYDVQQLDBVNaXJhbnRpcyBG\ndWVsLVFBIFRlYW0xGjAYBgNVBAMMEXB1YmxpYy5mdWVsLmxvY2FsMIIBIjANBgkq\nhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAr31W/jQFVzqR5xW39ZZx/dc1WmkWCmOj\nuVkD27qPV6Fd5hktnQaqpUdPS1ObH46A/x+JehxkGSkkHcjqCsvHnSdtgHbP8hem\neGH7dPPWot/yw6evO4hGVZNqBIjWw0Ov/BbZI/jt9VSnzqMBDuxdIEnAxLQXvZpQ\nxujVnXQ2kJ0dvClTg43q/TZmNHseF+59kWqL76cSq4XL+d4HHSXEpvYaoL0Q4L0E\n0x5gwzXgR6vOIM4qmQPJab2MRYyfcbM/iuX3i7k/GHCa/Gx8YkrEOQJ7PyIH+Q5M\n1dd3uKxUX56a/RWHzHmTzb6vgZdukgvPnKXJmWvaemQmpVFQBEPrVwIDAQABMA0G\nCSqGSIb3DQEBBQUAA4IBAQAd6Cd1dKK0yV5mFR2eVaWEm/xx2lSzN/wa1DlA0tld\n9rvV63nCbaS2gMO3ri9EeGH4XVCYSdlutAL7gwppYa50uHfxkpEGf2tiH59q49Bt\nHXr7qS/7rvqygt8Pfru7ymsTQCEuqxUW4x5cQdVuAj4FE7NISV4VvzqeMwBisdG+\nKwjtR8rvBDEmmTfLfHCcl11l2qAwEJ9To5E/jB9PsPhAhUC4xgHAbIO0TX78vZmR\nxcMl1nTSgViuCuiARigl+Cx8+P28FcYkAJrQ/2/4nIzEbvmmQL8kJRbY6zb2Yvih\n2pdk9CL8OI6B3p++E0p+BiA999hPwJ4zfEI9BFxp7+hg\n-----END CERTIFICATE-----\n-----BEGIN PRIVATE KEY-----\nMIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQCvfVb+NAVXOpHn\nFbf1lnH91zVaaRYKY6O5WQPbuo9XoV3mGS2dBqqlR09LU5sfjoD/H4l6HGQZKSQd\nyOoKy8edJ22Ads/yF6Z4Yft089ai3/LDp687iEZVk2oEiNbDQ6/8Ftkj+O31VKfO\nowEO7F0gScDEtBe9mlDG6NWddDaQnR28KVODjer9NmY0ex4X7n2RaovvpxKrhcv5\n3gcdJcSm9hqgvRDgvQTTHmDDNeBHq84gziqZA8lpvYxFjJ9xsz+K5feLuT8YcJr8\nbHxiSsQ5Ans/Igf5DkzV13e4rFRfnpr9FYfMeZPNvq+Bl26SC8+cpcmZa9p6ZCal\nUVAEQ+tXAgMBAAECggEAfjeH+g0wSiy2A557UQeDtS60EPLEB3TirMx5GfB0aHKH\nNpelVusUkQtY3LSlPW0hGl10Y39H/1C3yTRYIKuwRje1alAJ//VCphLS6Kr4FO09\njbttLUQ2UhZUii5hSM/GI2nLgzPm8iyRBO34NOOLl010eAWPja8PqgCMo1KSbC9j\ndwL5XHAZIBhtGzMAOD/MTAxT4cruw6B+Ht5C1zKOEaT1MO0GZybqqj+d1hcnFUIW\ngbg2GDxPebBPHMpfUYYIdjKHKZ0m/HqDCnZGNrGVimHswNEJxx8dd7CVpMfIK8KZ\njsv0iFx+XUcrrLzuBEnDJwf75fSHNzIzyZF7ijOpAQKBgQDgBwkpS4+zJSYFVEmm\nrQ6tsteSGmEkigj6+qaWrQQnswopxfqm4n9VU6DeAQLBBoIHU9rNkySwTAXsK2ls\nD0QcwkDUV56b2L2hdSW50PU9ho9L7YpSi/B7O6MR6fbF4k3S6UbPq50mrlzwPhkk\nehLJKoC4L2LP2DPKWISNni/ytQKBgQDIiPJeL8X3GrS3fiwajMOh7FgPTpanqi5s\n5P5AWqNoyqD/ghypJRlD/95xyFeiZwAs+KrC84XmP5vFORu/qMrCLJq5YiLjwuf8\nG7vOqbW9/Fvxx8kCSUQz2LHOJGdzyvGDVXjYsQS1zX6MaEqG6k8v5ESCTiOPheVl\nL79ZczQxWwKBgQCYx3OR+/v1+kGhpMfNqXu3LZ4h/2d8Wb6iGsn9O+T3hfxKXMAB\ni7m24R92B05vgRawFJnFVLHSoSXw1/I/RXH4AunfZhm+wuMf9xpRTJXS7a9P4qFQ\nhirsf9FH6Dzo2tqkGX63JZw4wvSSymavH6ksE5ZRBc/nWtSHDDLpuZWNeQKBgAqF\n3SoCGcJIvXjvfwL5pf5mN4y+E/vCW2NNdOYNm4uRLneZ7UUW9Ed0MskHuUmFXCX/\n+n32Z21YoyTrRUB+a/1ad9gIhUosXR4GmolSsH3Cs1RxpmOfUpvh4BqwIFmcKaY5\novjD+TpNCTn28wo3W2Zo9QtdbFJItWvk4IaiG/gHAoGAP397C3iwAVYxlQ0N1ycl\nQitIG0nHDpq6lEp1P50rXdmMv5MdfcQkdq1kMLF8zGdEKEOrfzdmA3gEwZT8v/w4\nqOdM9XMeFGog3bhwkbvfpCkqmmtMIk12IkuFJVD96kGnkKqkW9y4RL7DALNj8Jcm\nVKVsRPIUCi2RBIAG+Cw6lss=\n-----END PRIVATE KEY-----\n", "name": "ca.pem"}, "cert_source": "user_uploaded", "metadata": {"group": "security", "weight": 110, "label": "Public TLS"}}, "mp": [{"weight": "1", "point": "1"}, {"weight": "2", "point": "2"}], "deployment_mode": "ha_compact", "release": {"operating_system": "Ubuntu", "description": "This option will install the OpenStack Liberty packages using Ubuntu as a base operating system. With high availability features built in, you are getting a robust, enterprise-grade OpenStack deployment.", "is_deployable": true, "components_metadata": [{"compatible": [{"name": "hypervisor:vmware"}], "description": "dialog.create_cluster_wizard.compute.qemu_description", "weight": 5, "default": true, "bind": [["settings:common.libvirt_type.value", "qemu"]], "name": "hypervisor:qemu", "label": "dialog.create_cluster_wizard.compute.qemu"}, {"compatible": [{"name": "hypervisor:qemu"}], "description": "dialog.create_cluster_wizard.compute.vcenter_description", "weight": 15, "bind": ["settings:common.use_vcenter.value"], "requires": [{"message": "dialog.create_cluster_wizard.compute.vcenter_warning", "name": "hypervisor:qemu"}], "name": "hypervisor:vmware", "label": "dialog.create_cluster_wizard.compute.vcenter"}, {"compatible": [{"name": "hypervisor:*"}, {"name": "network:neutron:ml2:*"}], "description": "dialog.create_cluster_wizard.network.neutron_ml2_description", "weight": 1000, "default": true, "name": "network:neutron:core:ml2", "label": "dialog.create_cluster_wizard.network.neutron_ml2"}, {"description": "dialog.create_cluster_wizard.network.neutron_vlan_description", "weight": 5, "incompatible": [{"message": "dialog.create_cluster_wizard.network.vlan_tun_alert", "name": "network:neutron:ml2:tun"}], "default": true, "bind": [["cluster:net_provider", "neutron"], ["cluster:net_segment_type", "vlan"]], "label": "common.network.neutron_vlan", "compatible": [{"name": "network:neutron:core:ml2"}, {"name": "hypervisor:qemu"}], "requires": [{"name": "network:neutron:core:ml2"}], "name": "network:neutron:ml2:vlan"}, {"description": "dialog.create_cluster_wizard.network.neutron_tun_description", "weight": 10, "incompatible": [{"message": "dialog.create_cluster_wizard.network.vlan_tun_alert", "name": "network:neutron:ml2:vlan"}, {"message": "dialog.create_cluster_wizard.network.hypervisor_alert", "name": "hypervisor:vmware"}, {"message": "dialog.create_cluster_wizard.additional.ironic_network_mode_alert", "name": "additional_service:ironic"}], "bind": [["cluster:net_provider", "neutron"], ["cluster:net_segment_type", "tun"]], "label": "common.network.neutron_tun", "compatible": [{"name": "network:neutron:core:ml2"}, {"name": "hypervisor:qemu"}], "requires": [{"name": "network:neutron:core:ml2"}], "name": "network:neutron:ml2:tun"}, {"description": "dialog.create_cluster_wizard.storage.default_provider", "weight": 5, "incompatible": [{"message": "LVM not compatible with Ceph", "name": "storage:block:ceph"}], "default": true, "bind": ["settings:storage.volumes_lvm.value"], "label": "dialog.create_cluster_wizard.storage.lvm", "compatible": [{"name": "hypervisor:qemu"}, {"name": "hypervisor:vmware"}, {"name": "network:neutron:core:ml2"}, {"name": "network:neutron:ml2:vlan"}, {"name": "network:neutron:ml2:tun"}], "name": "storage:block:lvm"}, {"compatible": [{"name": "hypervisor:qemu"}, {"name": "hypervisor:vmware"}, {"name": "network:neutron:core:ml2"}, {"name": "network:neutron:ml2:vlan"}, {"name": "network:neutron:ml2:tun"}, {"name": "storage:object:ceph"}, {"name": "storage:ephemeral:ceph"}, {"name": "storage:image:ceph"}], "description": "dialog.create_cluster_wizard.storage.ceph_block", "weight": 10, "incompatible": [{"message": "Ceph not compatible with LVM", "name": "storage:block:lvm"}], "bind": [["settings:storage.volumes_ceph.value", true], ["settings:storage.volumes_lvm.value", false]], "name": "storage:block:ceph", "label": "dialog.create_cluster_wizard.storage.ceph"}, {"compatible": [{"name": "hypervisor:qemu"}, {"name": "hypervisor:vmware"}, {"name": "network:neutron:core:ml2"}, {"name": "network:neutron:ml2:vlan"}, {"name": "network:neutron:ml2:tun"}, {"name": "storage:block:lvm"}, {"name": "storage:block:ceph"}, {"name": "storage:ephemeral:ceph"}, {"name": "storage:image:ceph"}], "description": "dialog.create_cluster_wizard.storage.ceph_object", "weight": 10, "bind": ["settings:storage.objects_ceph.value"], "name": "storage:object:ceph", "label": "dialog.create_cluster_wizard.storage.ceph"}, {"compatible": [{"name": "hypervisor:qemu"}, {"name": "hypervisor:vmware"}, {"name": "network:neutron:core:ml2"}, {"name": "network:neutron:ml2:vlan"}, {"name": "network:neutron:ml2:tun"}, {"name": "storage:block:lvm"}, {"name": "storage:block:ceph"}, {"name": "storage:object:ceph"}, {"name": "storage:image:ceph"}], "description": "dialog.create_cluster_wizard.storage.ceph_ephemeral", "weight": 10, "bind": ["settings:storage.ephemeral_ceph.value"], "name": "storage:ephemeral:ceph", "label": "dialog.create_cluster_wizard.storage.ceph"}, {"compatible": [{"name": "hypervisor:qemu"}, {"name": "hypervisor:vmware"}, {"name": "network:neutron:core:ml2"}, {"name": "network:neutron:ml2:vlan"}, {"name": "network:neutron:ml2:tun"}, {"name": "storage:block:lvm"}, {"name": "storage:block:ceph"}, {"name": "storage:object:ceph"}, {"name": "storage:ephemeral:ceph"}], "description": "dialog.create_cluster_wizard.storage.ceph_image", "weight": 10, "bind": ["settings:storage.images_ceph.value"], "name": "storage:image:ceph", "label": "dialog.create_cluster_wizard.storage.ceph"}, {"compatible": [{"name": "hypervisor:qemu"}, {"name": "hypervisor:vmware"}, {"name": "network:neutron:core:ml2"}, {"name": "network:neutron:ml2:vlan"}, {"name": "network:neutron:ml2:tun"}, {"name": "storage:block:lvm"}, {"name": "storage:block:ceph"}, {"name": "storage:object:ceph"}, {"name": "storage:ephemeral:ceph"}, {"name": "storage:image:ceph"}, {"name": "additional_service:sahara"}, {"name": "additional_service:murano"}, {"name": "additional_service:ceilometer"}, {"name": "additional_service:ironic"}], "description": "dialog.create_cluster_wizard.additional.install_sahara_description", "weight": 10, "bind": ["settings:additional_components.sahara.value"], "name": "additional_service:sahara", "label": "dialog.create_cluster_wizard.additional.install_sahara"}, {"compatible": [{"name": "hypervisor:qemu"}, {"name": "hypervisor:vmware"}, {"name": "network:neutron:core:ml2"}, {"name": "network:neutron:ml2:vlan"}, {"name": "network:neutron:ml2:tun"}, {"name": "storage:block:lvm"}, {"name": "storage:block:ceph"}, {"name": "storage:object:ceph"}, {"name": "storage:ephemeral:ceph"}, {"name": "storage:image:ceph"}, {"name": "additional_service:sahara"}, {"name": "additional_service:ceilometer"}, {"name": "additional_service:ironic"}], "description": "dialog.create_cluster_wizard.additional.install_murano_description", "weight": 20, "bind": ["settings:additional_components.murano.value"], "name": "additional_service:murano", "label": "dialog.create_cluster_wizard.additional.install_murano"}, {"compatible": [{"name": "hypervisor:qemu"}, {"name": "hypervisor:vmware"}, {"name": "network:neutron:core:ml2"}, {"name": "network:neutron:ml2:vlan"}, {"name": "network:neutron:ml2:tun"}, {"name": "storage:block:lvm"}, {"name": "storage:block:ceph"}, {"name": "storage:object:ceph"}, {"name": "storage:ephemeral:ceph"}, {"name": "storage:image:ceph"}, {"name": "additional_service:sahara"}, {"name": "additional_service:murano"}, {"name": "additional_service:ironic"}], "description": "dialog.create_cluster_wizard.additional.install_ceilometer_description", "weight": 30, "bind": ["settings:additional_components.ceilometer.value"], "name": "additional_service:ceilometer", "label": "dialog.create_cluster_wizard.additional.install_ceilometer"}, {"compatible": [{"name": "hypervisor:qemu"}, {"name": "network:neutron:core:ml2"}, {"name": "network:neutron:ml2:vlan"}, {"name": "storage:block:lvm"}, {"name": "storage:block:ceph"}, {"name": "storage:object:ceph"}, {"name": "storage:ephemeral:ceph"}, {"name": "storage:image:ceph"}, {"name": "additional_service:sahara"}, {"name": "additional_service:murano"}, {"name": "additional_service:ceilometer"}], "description": "dialog.create_cluster_wizard.additional.install_ironic_description", "weight": 40, "incompatible": [{"message": "dialog.create_cluster_wizard.additional.ironic_network_mode_alert", "name": "network:neutron:ml2:tun"}], "bind": ["settings:additional_components.ironic.value"], "name": "additional_service:ironic", "label": "dialog.create_cluster_wizard.additional.install_ironic"}], "state": "available", "version": "liberty-9.0", "roles_metadata": {"compute-vmware": {"restrictions": [{"action": "hide", "condition": "settings:common.use_vcenter.value == false"}], "group": "compute", "description": "A node that runs nova-compute with VCDriver, that manages ESXi computing resources via VMware vCenter.", "weight": 90, "conflicts": ["controller", "compute", "cinder", "cinder-block-device", "ceph-osd", "mongo", "base-os", "virt", "ironic"], "name": "Compute VMware"}, "compute": {"group": "compute", "description": "A Compute node creates, manages, and terminates virtual machine instances.", "limits": {"recommended": 1}, "public_for_dvr_required": true, "fault_tolerance": "2%", "weight": 20, "name": "Compute"}, "cinder-vmware": {"restrictions": [{"action": "hide", "condition": "settings:common.use_vcenter.value == false"}], "group": "storage", "description": "Cinder-VMware provides scheduling of block storage resources delivered over VMware vCenter. Block storage can be used for database storage, expandable file systems, or providing a server with access to raw block level devices.", "weight": 40, "limits": {"recommended": 1}, "name": "Cinder Proxy to VMware Datastore"}, "virt": {"restrictions": [{"action": "hide", "condition": "not ('advanced' in version:feature_groups)"}], "group": "compute", "description": "ADVANCED: Make available possibilities to spawn vms on this node that can be assign as a normal nodes.", "weight": 80, "conflicts": ["controller", "base-os"], "name": "Virtual", "public_ip_required": true}, "base-os": {"group": "other", "description": "Install base Operating System without additional packages and configuration.", "weight": 70, "name": "Operating System"}, "controller": {"limits": {"overrides": [{"message": "Neutron L3 HA requires at least 2 Controller nodes to function properly.", "condition": "settings:neutron_advanced_configuration.neutron_l3_ha.value == true", "min": 2}], "recommended": 3, "min": 1}, "group": "base", "description": "The Controller initiates orchestration activities and provides an external API.  Other components like Glance (image storage), Keystone (identity management), Horizon (OpenStack dashboard) and Nova-Scheduler are installed on the controller as well.", "weight": 10, "update_required": ["compute", "cinder"], "conflicts": ["compute"], "public_ip_required": true, "has_primary": true, "public_for_dvr_required": true, "name": "Controller"}, "cinder-block-device": {"restrictions": [{"message": "Cinder Block Device should be enabled in settings", "condition": "settings:storage.volumes_block_device.value == false"}, {"message": "Ceph RBD cannot be used with Cinder Block Device", "condition": "settings:storage.volumes_ceph.value == true"}], "group": "storage", "description": "Host node for Cinder Block Devices", "weight": 35, "conflicts": ["controller", "cinder", "cinder-vmware", "ceph-osd"], "public_ip_required": false, "has_primary": false, "name": "Cinder Block Device"}, "ironic": {"restrictions": [{"message": "Ironic should be enabled.", "condition": "settings:additional_components.ironic.value == false"}], "group": "compute", "description": "Ironic conductor", "limits": {"recommended": 3, "min": 1}, "conflicts": ["compute"], "weight": 100, "name": "Ironic"}, "ceph-osd": {"update_once": ["controller"], "restrictions": [{"message": "Ceph must be enabled in settings", "condition": "settings:storage.volumes_ceph.value == false and settings:storage.images_ceph.value == false and settings:storage.ephemeral_ceph.value == false and settings:storage.objects_ceph.value == false"}], "group": "storage", "description": "Ceph storage can be configured to provide storage for block volumes (Cinder), images (Glance) and ephemeral instance storage (Nova). It can also provide object storage through the S3 and Swift API (See settings to enable each).", "limits": {"min": "settings:storage.osd_pool_size.value"}, "weight": 50, "name": "Ceph OSD"}, "cinder": {"restrictions": [{"message": "Cinder LVM should be enabled in settings", "condition": "settings:storage.volumes_lvm.value == false"}, {"message": "Ceph RBD cannot be used with Cinder", "condition": "settings:storage.volumes_ceph.value == true"}], "group": "storage", "description": "Cinder provides scheduling of block storage resources, typically delivered over iSCSI and other compatible backend storage systems. Block storage can be used for database storage, expandable file systems, or to provide a server with access to raw block level devices.", "weight": 30, "limits": {"recommended": 1}, "name": "Cinder"}, "mongo": {"restrictions": [{"message": "Ceilometer should be enabled.", "condition": "settings:additional_components.ceilometer.value == false"}, {"message": "You are already using external MongoDB.", "condition": "settings:additional_components.mongo.value == true"}], "group": "other", "description": "A feature-complete and recommended database for storage of metering data from OpenStack Telemetry (Ceilometer).", "limits": {"overrides": [{"max": 1, "message": "At most 1 MongoDB node can be added for non-HA deployment", "condition": "cluster:mode != 'ha_compact'"}, {"message": "At least 3 MongoDB nodes are recommended for HA deployment.", "recommended": 3, "condition": "cluster:mode == 'ha_compact'"}], "min": 1}, "weight": 60, "conflicts": ["compute", "ceph-osd"], "has_primary": true, "name": "Telemetry - MongoDB"}}, "vmware_attributes_metadata": {"editable": {"value": {"glance": {"vcenter_username": "", "datacenter": "", "datastore": "", "vcenter_password": "", "vcenter_host": ""}, "availability_zones": [{"vcenter_username": "", "az_name": "vcenter", "vcenter_password": "", "nova_computes": [{"datastore_regex": "", "service_name": "", "target_node": {"current": {"id": "controllers", "label": "controllers"}, "options": [{"id": "controllers", "label": "controllers"}]}, "vsphere_cluster": ""}], "vcenter_host": ""}]}, "metadata": [{"fields": [{"regex": {"source": "^(?!nova$)\\w+$", "error": "Invalid availability zone name"}, "label": "Availability zone", "type": "text", "description": "Availability zone name", "name": "az_name"}, {"regex": {"source": "^[a-zA-Z\\d]+[-\\.\\da-zA-Z]*$", "error": "Invalid vCenter host"}, "label": "vCenter host", "type": "text", "description": "vCenter host or IP", "name": "vcenter_host"}, {"regex": {"source": "\\S", "error": "Empty vCenter username"}, "label": "vCenter username", "type": "text", "description": "vCenter username", "name": "vcenter_username"}, {"regex": {"source": "\\S", "error": "Empty vCenter password"}, "label": "vCenter password", "type": "password", "description": "vCenter password", "name": "vcenter_password"}, {"fields": [{"regex": {"source": "\\S", "error": "Invalid vSphere cluster"}, "label": "vSphere cluster", "type": "text", "description": "vSphere cluster", "name": "vsphere_cluster"}, {"regex": {"source": "^\\w[\\w\\-]+$", "error": "Invalid service name"}, "label": "Service name", "type": "text", "description": "Service name", "name": "service_name"}, {"regex": {"source": "\\S", "error": "Invalid datastore regex"}, "label": "Datastore regex", "type": "text", "description": "Datastore regex", "name": "datastore_regex"}, {"label": "Target node", "type": "select", "description": "Target node for nova-compute service", "name": "target_node"}], "editable_for_deployed": true, "name": "nova_computes", "type": "array"}], "type": "array", "name": "availability_zones", "restrictions": [{"message": "VMware vCenter not enabled for cluster", "condition": "settings:common.use_vcenter.value == false"}]}, {"fields": [{"regex": {"source": "^[a-zA-Z\\d]+[-\\.\\da-zA-Z]*$", "error": "Invalid vCenter host"}, "label": "vCenter host", "type": "text", "description": "vCenter host or IP", "name": "vcenter_host"}, {"regex": {"source": "\\S", "error": "Empty vCenter username"}, "label": "vCenter username", "type": "text", "description": "vCenter username", "name": "vcenter_username"}, {"regex": {"source": "\\S", "error": "Empty vCenter password"}, "label": "vCenter password", "type": "password", "description": "vCenter password", "name": "vcenter_password"}, {"regex": {"source": "\\S", "error": "Invalid datacenter"}, "label": "Datacenter", "type": "text", "description": "Datacenter", "name": "datacenter"}, {"regex": {"source": "\\S", "error": "Invalid datastore"}, "label": "Datastore", "type": "text", "description": "Datastore", "name": "datastore"}], "type": "object", "name": "glance", "restrictions": [{"message": "VMware vCenter datastore for images is not enabled in Settings tab", "condition": "settings:storage.images_vcenter.value == false or settings:common.use_vcenter.value == false"}]}]}}, "modes_metadata": {"ha_compact": {"description": "This configuration Deploys OpenStack ready for high availability (HA). Controller services are prepared for HA by setting up a base MySQL/Galera, RabbitMQ and HAProxy so that additional controllers can be deployed NOW, or scaled out LATER. 3 or more controllers are required for a true HA environment."}}, "id": 2, "attributes_metadata": {"generated": {"glance_glare": {"user_password": {"generator": "password"}}, "repo_setup": {"installer_kernel": {"local": "/var/www/nailgun/ubuntu/x86_64/images/linux", "remote_relative": "dists/trusty/main/installer-amd64/current/images/netboot/ubuntu-installer/amd64/linux"}, "installer_initrd": {"local": "/var/www/nailgun/ubuntu/x86_64/images/initrd.gz", "remote_relative": "dists/trusty/main/installer-amd64/current/images/netboot/ubuntu-installer/amd64/initrd.gz"}}, "sahara": {"db_password": {"generator": "password"}, "user_password": {"generator": "password"}}, "murano-cfapi": {"db_password": {"generator": "password"}, "user_password": {"generator": "password"}, "rabbit_password": {"generator": "password"}}, "heat": {"db_password": {"generator": "password"}, "user_password": {"generator": "password"}, "auth_encryption_key": {"generator": "hexstring", "generator_arg": "32"}, "rabbit_password": {"generator": "password"}}, "puppet": {"modules": "rsync://{settings.MASTER_IP}:/puppet/{cluster.release.version}/modules/", "manifests": "rsync://{settings.MASTER_IP}:/puppet/{cluster.release.version}/manifests/"}, "rabbit": {"password": {"generator": "password"}}, "mysql": {"root_password": {"generator": "password"}, "wsrep_password": {"generator": "password"}}, "ironic": {"swift_tempurl_key": {"generator": "password"}, "db_password": {"generator": "password"}, "user_password": {"generator": "password"}}, "glance": {"db_password": {"generator": "password"}, "user_password": {"generator": "password"}}, "cinder": {"db_password": {"generator": "password"}, "user_password": {"generator": "password"}, "fixed_key": {"generator": "hexstring", "generator_arg": "64"}}, "swift": {"user_password": {"generator": "password"}}, "quantum_settings": {"database": {"passwd": {"generator": "password"}}, "keystone": {"admin_password": {"generator": "password"}}, "metadata": {"metadata_proxy_shared_secret": {"generator": "password"}}}, "base_syslog": {"syslog_port": {"generator": "identical", "generator_arg": "514"}, "syslog_server": {"generator": "ip", "generator_arg": "admin"}}, "ceilometer": {"db_password": {"generator": "password"}, "user_password": {"generator": "password"}, "metering_secret": {"generator": "password"}}, "provision": {"image_data": {"/boot": {"container": "gzip", "uri": "http://{settings.MASTER_IP}:8080/targetimages/env_{cluster.id}_ubuntu_1404_amd64-boot.img.gz", "format": "ext2"}, "/": {"container": "gzip", "uri": "http://{settings.MASTER_IP}:8080/targetimages/env_{cluster.id}_ubuntu_1404_amd64.img.gz", "format": "ext4"}}, "codename": "trusty"}, "aodh": {"db_password": {"generator": "password"}, "user_password": {"generator": "password"}}, "nova": {"db_password": {"generator": "password"}, "user_password": {"generator": "password"}, "state_path": "/var/lib/nova"}, "deployed_before": {"value": false}, "murano": {"db_password": {"generator": "password"}, "user_password": {"generator": "password"}, "rabbit_password": {"generator": "password"}}, "keystone": {"db_password": {"generator": "password"}, "admin_token": {"generator": "password"}}, "horizon": {"secret_key": {"generator": "hexstring", "generator_arg": "64"}}, "cobbler": {"profile": {"generator": "identical", "generator_arg": "ubuntu_1404_x86_64"}}}, "editable": {"repo_setup": {"repos": {"type": "custom_repo_configuration", "description": "Please note: the first repository will be considered the operating system mirror that will be used during node provisioning.\nTo create a local repository mirror on the Fuel master node, please follow the instructions provided by running \"fuel-createmirror --help\" on the Fuel master node.\nPlease make sure your Fuel master node has Internet access to the repository before attempting to create a mirror.\nFor more details, please refer to the documentation (https://docs.mirantis.com/openstack/fuel/fuel-9.0/operations.html#external-ubuntu-ops).\n", "value": [{"priority": 1001, "name": "ubuntu-0", "suite": "trusty", "section": "main universe multiverse", "type": "deb", "uri": "http://mirror-pkgs.vm.mirantis.net/ubuntu-2016-03-29-170322"}, {"priority": 1001, "name": "ubuntu-1", "suite": "trusty-updates", "section": "main universe multiverse", "type": "deb", "uri": "http://mirror-pkgs.vm.mirantis.net/ubuntu-2016-03-29-170322"}, {"priority": 1001, "name": "ubuntu-2", "suite": "trusty-security", "section": "main universe multiverse", "type": "deb", "uri": "http://mirror-pkgs.vm.mirantis.net/ubuntu-2016-03-29-170322"}, {"priority": 1001, "name": "ubuntu-3", "suite": "trusty-proposed", "section": "main universe multiverse", "type": "deb", "uri": "http://mirror-pkgs.vm.mirantis.net/ubuntu-2016-03-29-170322"}, {"priority": 1050, "name": "mos", "suite": "mos9.0", "section": "main restricted", "type": "deb", "uri": "http://{settings.MASTER_IP}:8080/{cluster.release.version}/ubuntu/x86_64"}, {"priority": 1050, "name": "mos-updates", "suite": "mos9.0-updates", "section": "main restricted", "type": "deb", "uri": "http://mirror.fuel-infra.org/mos-repos/ubuntu/{cluster.release.environment_version}/"}, {"priority": 1050, "name": "mos-security", "suite": "mos9.0-security", "section": "main restricted", "type": "deb", "uri": "http://mirror.fuel-infra.org/mos-repos/ubuntu/{cluster.release.environment_version}/"}, {"priority": 1100, "name": "mos-holdback", "suite": "mos9.0-holdback", "section": "main restricted", "type": "deb", "uri": "http://mirror.fuel-infra.org/mos-repos/ubuntu/{cluster.release.environment_version}/"}, {"priority": 1150, "name": "Auxiliary", "suite": "auxiliary", "section": "main restricted", "type": "deb", "uri": "http://{settings.MASTER_IP}:8080/{cluster.release.version}/ubuntu/auxiliary"}], "extra_priority": null}, "metadata": {"group": "general", "always_editable": true, "weight": 50, "label": "Repositories"}}, "corosync": {"group": {"value": "226.94.1.1", "type": "text", "description": "", "weight": 10, "label": "Group"}, "verified": {"value": false, "type": "checkbox", "description": "Set True only if multicast is configured correctly on router.", "weight": 10, "label": "Need to pass network verification."}, "port": {"value": "12000", "type": "text", "description": "", "weight": 20, "label": "Port"}, "metadata": {"restrictions": [{"action": "hide", "condition": "true"}], "group": "general", "weight": 50, "label": "Corosync"}}, "syslog": {"syslog_port": {"regex": {"source": "^([1-9][0-9]{0,3}|[1-5][0-9]{4}|6[0-4][0-9]{3}|65[0-4][0-9]{2}|655[0-2][0-9]|6553[0-5])$", "error": "Invalid syslog port"}, "description": "Remote syslog port", "weight": 20, "type": "text", "value": "514", "label": "Port"}, "syslog_transport": {"type": "radio", "values": [{"data": "udp", "description": "", "label": "UDP"}, {"data": "tcp", "description": "", "label": "TCP"}], "value": "tcp", "weight": 30, "label": "Syslog transport protocol"}, "syslog_server": {"regex": {"source": "^[a-zA-Z\\d]+[-\\.\\da-zA-Z]*$", "error": "Invalid hostname"}, "description": "Remote syslog hostname", "weight": 10, "type": "text", "value": "", "label": "Hostname"}, "metadata": {"enabled": false, "group": "logging", "toggleable": true, "weight": 50, "label": "Syslog"}}, "operator_user": {"password": {"regex": {"source": "\\S", "error": "Empty password"}, "description": "Password for operator user", "weight": 60, "type": "password", "value": {"generator": "password"}, "label": "Password"}, "name": {"regex": {"source": "\\S", "error": "Empty username"}, "description": "Username for operator user", "weight": 50, "type": "text", "value": "fueladmin", "label": "Username"}, "sudo": {"value": "ALL=(ALL) NOPASSWD: ALL", "type": "textarea", "description": "Sudoers configuration directives for operator user, one per line.", "weight": 90, "label": "Sudoers configuration"}, "homedir": {"regex": {"source": "^/\\S", "error": "Invalid path"}, "description": "Home directory for operator user", "weight": 70, "type": "text", "value": "/home/fueladmin", "label": "Home directory"}, "authkeys": {"value": "", "type": "textarea", "description": "Public SSH keys to include to operator user's authorized keys, one per line.", "weight": 80, "label": "Authorized SSH keys"}, "metadata": {"group": "general", "weight": 15, "label": "Operating System Access"}}, "workloads_collector": {"password": {"type": "password", "value": {"generator": "password"}}, "enabled": {"type": "hidden", "value": true}, "user": {"type": "text", "value": "fuel_stats_user"}, "tenant": {"type": "text", "value": "services"}, "metadata": {"restrictions": [{"action": "hide", "condition": "true"}], "group": "general", "weight": 10, "label": "Workloads Collector User"}}, "provision": {"packages": {"type": "textarea", "value": "acl\nanacron\nbash-completion\nbridge-utils\nbsdmainutils\nbuild-essential\ncloud-init\ncurl\ndaemonize\ndebconf-utils\ngdisk\ngrub-pc\nhpsa-dkms\nhwloc\ni40e-dkms\nlinux-firmware\nlinux-firmware-nonfree\nlinux-headers-generic-lts-trusty\nlinux-image-generic-lts-trusty\nlvm2\nmcollective\nmdadm\nmultipath-tools\nmultipath-tools-boot\nnailgun-agent\nnailgun-mcagents\nnetwork-checker\nntp\nopenssh-client\nopenssh-server\npuppet\npython-amqp\nruby-augeas\nruby-ipaddress\nruby-json\nruby-netaddr\nruby-openstack\nruby-shadow\nruby-stomp\ntelnet\nubuntu-minimal\nubuntu-standard\nuuid-runtime\nvim\nvirt-what\nvlan\n", "weight": 10, "label": "Initial packages"}, "method": {"type": "hidden", "value": "image"}, "metadata": {"restrictions": [{"action": "hide", "condition": "false"}], "group": "general", "weight": 80, "label": "Provision"}}, "neutron_advanced_configuration": {"neutron_qos": {"value": false, "type": "checkbox", "description": "Enable Neutron QoS advanced service plug-in", "weight": 40, "label": "Neutron QoS"}, "neutron_l3_ha": {"restrictions": [{"message": "Neutron DVR must be disabled in order to use Neutron L3 HA", "condition": "settings:neutron_advanced_configuration.neutron_dvr.value == true"}], "description": "Enable High Availability features for Virtual Routers in Neutron\nRequires at least 2 Controller nodes to function properly\n", "weight": 30, "type": "checkbox", "value": false, "label": "Neutron L3 HA"}, "neutron_dvr": {"restrictions": [{"networking_parameters:segmentation_type != 'vlan' and settings:neutron_advanced_configuration.neutron_l2_pop.value == false": "DVR requires L2 population to be enabled."}], "description": "Enable Distributed Virtual Routers in Neutron", "weight": 20, "type": "checkbox", "value": false, "label": "Neutron DVR"}, "neutron_l2_pop": {"restrictions": [{"action": "hide", "condition": "networking_parameters:segmentation_type == 'vlan'"}], "description": "Enable L2 population mechanism in Neutron", "weight": 10, "type": "checkbox", "value": false, "label": "Neutron L2 population"}, "metadata": {"restrictions": [{"action": "hide", "condition": "cluster:net_provider != 'neutron'"}], "group": "network", "weight": 20, "label": "Neutron Advanced Configuration"}}, "service_user": {"password": {"type": "hidden", "value": {"generator": "password"}}, "homedir": {"type": "hidden", "value": "/var/lib/fuel"}, "name": {"type": "hidden", "value": "fuel"}, "sudo": {"type": "hidden", "value": "ALL=(ALL) NOPASSWD: ALL"}, "root_password": {"type": "hidden", "value": "r00tme"}, "metadata": {"restrictions": [{"action": "hide", "condition": "true"}], "group": "general", "weight": 10, "label": "Service user account"}}, "additional_components": {"ceilometer": {"value": false, "type": "checkbox", "description": "If selected, Ceilometer and Aodh components will be installed", "weight": 60, "label": "Install Ceilometer and Aodh"}, "mongo": {"restrictions": ["settings:additional_components.ceilometer.value == false"], "description": "If selected, You can use external Mongo DB as ceilometer backend", "weight": 70, "type": "checkbox", "value": false, "label": "Use external Mongo DB"}, "murano": {"value": false, "type": "checkbox", "description": "If selected, Murano component will be installed", "weight": 20, "label": "Install Murano"}, "murano-cfapi": {"restrictions": [{"message": "Murano should be enabled", "condition": "settings:additional_components.murano.value == false"}, {"action": "hide", "condition": "not ('experimental' in version:feature_groups)"}], "description": "If selected, Murano service broker will be installed", "weight": 30, "type": "checkbox", "value": false, "label": "Install Murano service broker for Cloud Foundry"}, "heat": {"value": true, "type": "hidden", "description": "", "weight": 50, "label": ""}, "sahara": {"value": false, "type": "checkbox", "description": "If selected, Sahara component will be installed", "weight": 10, "label": "Install Sahara"}, "ironic": {"restrictions": [{"cluster:net_provider != 'neutron' or networking_parameters:segmentation_type != 'vlan'": "Ironic requires Neutron with VLAN segmentation."}, {"settings:storage.images_ceph.value == true and settings:storage.objects_ceph.value == false": "Ironic requires Swift or RadosGW for Glance images."}], "description": "If selected, Ironic component will be installed", "weight": 80, "type": "checkbox", "value": false, "label": "Install Ironic"}, "metadata": {"group": "openstack_services", "weight": 20, "label": "Additional Components"}, "murano_glance_artifacts_plugin": {"restrictions": [{"message": "Murano should be enabled", "condition": "settings:additional_components.murano.value == false"}, {"action": "hide", "condition": "not ('experimental' in version:feature_groups)"}], "description": "If selected glance artifact repository will be enabled", "weight": 40, "type": "checkbox", "value": false, "label": "Enable glance artifact repository"}}, "cgroups": {"metadata": {"restrictions": [{"action": "hide", "condition": "true"}], "group": "general", "always_editable": true, "weight": 90, "label": "Cgroups conguration for services"}}, "external_dns": {"dns_list": {"regex": {"source": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$", "error": "Invalid IP address"}, "description": "List of upstream DNS servers", "weight": 10, "max": 3, "type": "text_list", "value": {"generator": "from_settings", "generator_arg": "DNS_UPSTREAM"}, "label": "DNS list"}, "metadata": {"group": "network", "weight": 30, "label": "Host OS DNS Servers"}}, "storage": {"volumes_ceph": {"restrictions": ["settings:storage.volumes_lvm.value == true or settings:storage.volumes_block_device.value == true"], "description": "Configures Cinder to store volumes in Ceph RBD images.", "weight": 20, "type": "checkbox", "value": false, "label": "Ceph RBD for volumes (Cinder)"}, "objects_ceph": {"value": false, "type": "checkbox", "description": "Configures RadosGW front end for Ceph RBD. This exposes S3 and Swift API Interfaces. If enabled, this option will prevent Swift from installing.", "weight": 80, "label": "Ceph RadosGW for objects (Swift API)"}, "bootstrap_osd_key": {"type": "hidden", "value": {"generator": "cephx_key"}, "label": "bootstrap_osd_key"}, "volumes_block_device": {"restrictions": ["settings:storage.volumes_ceph.value == true"], "description": "High performance block device storage. It is recommended to have at least one Cinder Block Device", "weight": 15, "type": "checkbox", "value": false, "label": "Cinder Block device driver"}, "ephemeral_ceph": {"value": false, "type": "checkbox", "description": "Configures Nova to store ephemeral volumes in RBD. This works best if Ceph is enabled for volumes and images, too. Enables live migration of all types of Ceph backed VMs (without this option, live migration will only work with VMs launched from Cinder volumes).", "weight": 75, "label": "Ceph RBD for ephemeral volumes (Nova)"}, "volumes_lvm": {"restrictions": ["settings:storage.volumes_ceph.value == true"], "description": "It is recommended to have at least one Cinder node.", "weight": 10, "type": "checkbox", "value": true, "label": "Cinder LVM over iSCSI for volumes"}, "mon_key": {"type": "hidden", "value": {"generator": "cephx_key"}, "label": "mon_key"}, "images_vcenter": {"restrictions": [{"action": "hide", "condition": "settings:common.use_vcenter.value != true"}, {"message": "Only one Glance backend could be selected.", "condition": "settings:storage.images_ceph.value == true"}], "description": "Configures Glance to use the vCenter/ESXi backend to store images. If enabled, this option will prevent Swift from installing.", "weight": 35, "type": "checkbox", "value": false, "label": "VMware vCenter/ESXi datastore for images (Glance)"}, "osd_pool_size": {"regex": {"source": "^[1-9]\\d*$", "error": "Invalid number"}, "description": "Configures the default number of object replicas in Ceph. This number must be equal to or lower than the number of deployed 'Ceph OSD' nodes.", "weight": 85, "type": "text", "value": "3", "label": "Ceph object replication factor"}, "admin_key": {"type": "hidden", "value": {"generator": "cephx_key"}, "label": "admin_key"}, "images_ceph": {"restrictions": [{"settings:storage.images_vcenter.value == true": "Only one Glance backend could be selected."}], "description": "Configures Glance to use the Ceph RBD backend to store images. If enabled, this option will prevent Swift from installing.", "weight": 30, "type": "checkbox", "value": false, "label": "Ceph RBD for images (Glance)"}, "radosgw_key": {"type": "hidden", "value": {"generator": "cephx_key"}, "label": "radosgw_key"}, "fsid": {"type": "hidden", "value": {"generator": "uuid4"}, "label": "fsid"}, "metadata": {"group": "storage", "weight": 60, "label": "Storage Backends"}}, "public_ssl": {"horizon": {"restrictions": [{"settings:public_ssl.services.value == false": "TLS for OpenStack public endpoints should be enabled"}], "description": "Secure access to Horizon enabling HTTPS instead of HTTP", "weight": 20, "type": "checkbox", "value": false, "label": "HTTPS for Horizon"}, "services": {"value": false, "type": "checkbox", "description": "Enable TLS termination on HAProxy for OpenStack services", "weight": 10, "label": "TLS for OpenStack public endpoints"}, "hostname": {"restrictions": [{"action": "hide", "condition": "settings:public_ssl.horizon.value == false and settings:public_ssl.services.value == false"}], "description": "Your DNS entries should point to this name. Self-signed certificates also will use this hostname", "weight": 50, "type": "text", "value": "public.fuel.local", "label": "DNS hostname for public TLS endpoints"}, "cert_data": {"restrictions": [{"action": "hide", "condition": "(settings:public_ssl.cert_source.value != 'user_uploaded') or (settings:public_ssl.horizon.value == false and settings:public_ssl.services.value == false)"}], "description": "Certificate and private key data, concatenated into a single file", "weight": 40, "type": "file", "value": "", "label": "Certificate"}, "cert_source": {"restrictions": [{"action": "hide", "condition": "settings:public_ssl.horizon.value == false and settings:public_ssl.services.value == false"}], "values": [{"data": "self_signed", "description": "Generate private key and certificate that will be signed by this key", "label": "Self-signed"}, {"data": "user_uploaded", "description": "Use pre-generated key and certificate", "label": "I have my own keypair with certificate"}], "description": "From where we'll get certificate and private key", "weight": 30, "type": "radio", "value": "self_signed", "label": "Select source for certificate"}, "metadata": {"group": "security", "weight": 110, "label": "Public TLS"}}, "access": {"metadata": {"group": "general", "weight": 10, "label": "OpenStack Access"}, "password": {"regex": {"source": "\\S", "error": "Empty password"}, "description": "Password for Administrator", "weight": 20, "type": "password", "value": "admin", "label": "Password"}, "user": {"regex": {"source": "^(?!services$)(?!nova$)(?!glance$)(?!keystone$)(?!neutron$)(?!cinder$)(?!swift$)(?!ceph$)(?!ironic$)(?![Gg]uest$)(?!.* +.*$).+", "error": "Invalid username"}, "description": "Username for Administrator", "weight": 10, "type": "text", "value": "admin", "label": "Username"}, "tenant": {"regex": {"source": "^(?!services$)(?!nova$)(?!glance$)(?!keystone$)(?!neutron$)(?!cinder$)(?!swift$)(?!ceph$)(?!ironic$)(?![Gg]uest$)(?!.* +.*$).+", "error": "Invalid tenant name"}, "description": "Tenant (project) name for Administrator", "weight": 30, "type": "text", "value": "admin", "label": "Tenant"}, "email": {"regex": {"source": "^\\S+@\\S+$", "error": "Invalid email"}, "description": "Email address for Administrator", "weight": 40, "type": "text", "value": "admin@localhost", "label": "Email"}}, "kernel_params": {"kernel": {"type": "text", "description": "Default kernel parameters", "value": "console=tty0 net.ifnames=0 biosdevname=0 rootdelay=90 nomodeset", "label": "Initial parameters"}, "metadata": {"group": "general", "weight": 60, "label": "Kernel parameters"}}, "murano_settings": {"murano_repo_url": {"value": "http://storage.apps.openstack.org/", "type": "text", "description": "", "weight": 10, "label": "Murano Repository URL"}, "metadata": {"restrictions": [{"action": "hide", "message": "Murano is not enabled on the Additional Components section", "condition": "settings:additional_components.murano.value == false"}], "group": "openstack_services", "weight": 20, "label": "Murano Settings"}}, "common": {"use_vcenter": {"type": "hidden", "value": false, "weight": 30}, "auto_assign_floating_ip": {"restrictions": [{"action": "hide", "condition": "cluster:net_provider == 'neutron'"}], "group": "network", "description": "If selected, OpenStack will automatically assign a floating IP to a new instance", "weight": 40, "type": "checkbox", "value": false, "label": "Auto assign floating IP"}, "task_deploy": {"value": true, "type": "hidden", "description": "The new deployment engine based on cross-node dependencies for deployment tasks.", "weight": 11, "label": "Enable task based deploy"}, "auth_key": {"group": "security", "description": "Public key(s) to include in authorized_keys on deployed nodes", "weight": 70, "type": "hidden", "value": "", "label": "Public Key"}, "puppet_debug": {"group": "logging", "description": "Debug puppet logging mode provides more information, but requires more disk space.", "weight": 20, "type": "checkbox", "value": true, "label": "Puppet debug logging"}, "libvirt_type": {"group": "compute", "weight": 30, "values": [{"data": "kvm", "description": "Choose this type of hypervisor if you run OpenStack on hardware", "label": "KVM"}, {"data": "qemu", "description": "Choose this type of hypervisor if you run OpenStack on virtual hosts.", "label": "QEMU"}], "type": "radio", "value": "qemu", "label": "Hypervisor type"}, "resume_guests_state_on_host_boot": {"group": "compute", "description": "Whether to resume previous guests state when the host reboots. If enabled, this option causes guests assigned to the host to resume their previous state. If the guest was running a restart will be attempted when nova-compute starts. If the guest was not running previously, a restart will not be attempted.", "weight": 50, "type": "checkbox", "value": true, "label": "Resume guests state on host boot"}, "debug": {"group": "logging", "description": "Debug logging mode provides more information, but requires more disk space.", "weight": 20, "type": "checkbox", "value": false, "label": "OpenStack debug logging"}, "use_cow_images": {"group": "storage", "description": "For most cases you will want qcow format. If it's disabled, raw image format will be used to run VMs. OpenStack with raw format currently does not support snapshotting.", "weight": 60, "type": "checkbox", "value": true, "label": "Use qcow format for images"}, "nova_quota": {"group": "compute", "description": "Quotas are used to limit CPU and memory usage for tenants. Enabling quotas will increase load on the Nova database.", "weight": 30, "type": "checkbox", "value": false, "label": "Nova quotas"}, "metadata": {"weight": 10, "label": "Common"}}, "external_mongo": {"mongo_db_name": {"regex": {"source": "^\\w+$", "error": "Invalid database name"}, "description": "Mongo database name", "weight": 30, "type": "text", "value": "ceilometer", "label": "Database name"}, "mongo_replset": {"value": "", "type": "text", "description": "Name for Mongo replication set", "weight": 30, "label": "Replset"}, "mongo_user": {"regex": {"source": "^\\w+$", "error": "Empty username"}, "description": "Mongo database username", "weight": 30, "type": "text", "value": "ceilometer", "label": "Username"}, "metadata": {"restrictions": [{"action": "hide", "message": "Ceilometer and MongoDB are not enabled on the Additional Components section", "condition": "settings:additional_components.mongo.value == false"}], "group": "openstack_services", "weight": 20, "label": "External MongoDB"}, "mongo_password": {"regex": {"source": "^\\S*$", "error": "Password contains spaces"}, "description": "Mongo database password", "weight": 30, "type": "password", "value": "ceilometer", "label": "Password"}, "hosts_ip": {"regex": {"source": "^(((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?),)*((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$", "error": "Invalid hosts ip sequence"}, "description": "IP Addresses of MongoDB. Use comma to split IPs", "weight": 30, "type": "text", "value": "", "label": "MongoDB hosts IP"}}, "public_network_assignment": {"assign_to_all_nodes": {"value": false, "type": "checkbox", "description": "When disabled, public network will be assigned to controllers only", "weight": 10, "label": "Assign public network to all nodes"}, "metadata": {"restrictions": [{"action": "hide", "condition": "cluster:net_provider != 'neutron'"}], "group": "network", "weight": 10, "label": "Public network assignment"}}, "external_ntp": {"ntp_list": {"regex": {"source": "^[a-zA-Z\\d]+[-\\.\\da-zA-Z]*$", "error": "Invalid NTP server"}, "description": "List of upstream NTP servers", "weight": 10, "type": "text_list", "value": {"generator": "from_settings", "generator_arg": "NTP_UPSTREAM"}, "label": "NTP server list"}, "metadata": {"group": "network", "weight": 40, "label": "Host OS NTP Servers"}}}}, "name": "Liberty on Ubuntu 14.04"}, "sahara": {"db_password": "0xS02J0fLc0VtubLNyPnkz6b", "user_password": "8kxSDOTMsOVCtrvc1eqbh56R", "enabled": false}, "use_cow_images": true, "mongo": {"enabled": false}, "murano-cfapi": {"db_password": "4GuyD5ya1pkzDdRbD51z9Z9V", "user_password": "pCg8K3V6sVR09NTbVWit1iNo", "enabled": false, "rabbit_password": "QlXPfakg12RqVIZbl8CQZlrD"}, "cluster": {"status": "operational", "is_customized": false, "release_id": 2, "name": "HAOneControllerNeutron", "is_locked": false, "net_provider": "neutron", "fuel_version": "9.0", "components": [], "mode": "ha_compact", "changes": [], "id": 1, "ui_settings": {"sort": [{"roles": "asc"}], "sort_by_labels": [], "search": "", "view_mode": "standard", "filter_by_labels": {}, "filter": {}}}, "cobbler": {"profile": "ubuntu_1404_x86_64"}, "plugins": [], "ironic": {"swift_tempurl_key": "3A4WWjzAMCzdSBhmkBZiDBaO", "db_password": "QoMoE645iLKiyNDdfj3VFprG", "user_password": "IGsnN7wWnFAvKxvwy5bCiifx", "enabled": false}, "repo_setup": {"installer_kernel": {"local": "/var/www/nailgun/ubuntu/x86_64/images/linux", "remote_relative": "dists/trusty/main/installer-amd64/current/images/netboot/ubuntu-installer/amd64/linux"}, "repos": [{"priority": 1001, "name": "ubuntu-0", "suite": "trusty", "section": "main universe multiverse", "type": "deb", "uri": "http://mirror-pkgs.vm.mirantis.net/ubuntu-2016-03-29-170322"}, {"priority": 1001, "name": "ubuntu-1", "suite": "trusty-updates", "section": "main universe multiverse", "type": "deb", "uri": "http://mirror-pkgs.vm.mirantis.net/ubuntu-2016-03-29-170322"}, {"priority": 1001, "name": "ubuntu-2", "suite": "trusty-security", "section": "main universe multiverse", "type": "deb", "uri": "http://mirror-pkgs.vm.mirantis.net/ubuntu-2016-03-29-170322"}, {"priority": 1001, "name": "ubuntu-3", "suite": "trusty-proposed", "section": "main universe multiverse", "type": "deb", "uri": "http://mirror-pkgs.vm.mirantis.net/ubuntu-2016-03-29-170322"}, {"priority": 1050, "name": "mos", "suite": "mos9.0", "section": "main restricted", "type": "deb", "uri": "http://10.109.0.2:8080/liberty-9.0/ubuntu/x86_64"}, {"priority": 1050, "name": "mos-updates", "suite": "mos9.0-updates", "section": "main restricted", "type": "deb", "uri": "http://mirror.fuel-infra.org/mos-repos/ubuntu/9.0/"}, {"priority": 1050, "name": "mos-security", "suite": "mos9.0-security", "section": "main restricted", "type": "deb", "uri": "http://mirror.fuel-infra.org/mos-repos/ubuntu/9.0/"}, {"priority": 1100, "name": "mos-holdback", "suite": "mos9.0-holdback", "section": "main restricted", "type": "deb", "uri": "http://mirror.fuel-infra.org/mos-repos/ubuntu/9.0/"}, {"priority": 1150, "name": "Auxiliary", "suite": "auxiliary", "section": "main restricted", "type": "deb", "uri": "http://10.109.0.2:8080/liberty-9.0/ubuntu/auxiliary"}], "installer_initrd": {"local": "/var/www/nailgun/ubuntu/x86_64/images/initrd.gz", "remote_relative": "dists/trusty/main/installer-amd64/current/images/netboot/ubuntu-installer/amd64/initrd.gz"}, "metadata": {"group": "general", "always_editable": true, "weight": 50, "label": "Repositories"}}, "ceilometer": {"db_password": "fjDKF17ytcp7mn2fYOx59kjp", "user_password": "iQVjq3O0yUemwORWnRJNPzxl", "metering_secret": "T5QPqWHXZsZLshLlP4WZnGma", "enabled": false}, "network_metadata": {"nodes": {"node-3": {"nova_hugepages_enabled": false, "swift_zone": "3", "name": "node-3", "network_roles": {"keystone/api": "10.109.1.5", "neutron/api": "10.109.1.5", "mgmt/database": "10.109.1.5", "sahara/api": "10.109.1.5", "ceilometer/api": "10.109.1.5", "mgmt/vip": "10.109.1.5", "ceph/public": "10.109.2.3", "mgmt/messaging": "10.109.1.5", "management": "10.109.1.5", "swift/api": "10.109.1.5", "storage": "10.109.2.3", "mgmt/corosync": "10.109.1.5", "glance/glare": "10.109.1.5", "aodh/api": "10.109.1.5", "cinder/api": "10.109.1.5", "swift/replication": "10.109.2.3", "admin/pxe": "10.109.0.6", "mongo/db": "10.109.1.5", "neutron/private": null, "neutron/floating": null, "fw-admin": "10.109.0.6", "glance/api": "10.109.1.5", "heat/api": "10.109.1.5", "murano/api": "10.109.1.5", "ironic/api": "10.109.1.5", "nova/api": "10.109.1.5", "murano/cfapi": "10.109.1.5", "horizon": "10.109.1.5", "nova/migration": "10.109.1.5", "mgmt/memcache": "10.109.1.5", "cinder/iscsi": "10.109.2.3", "ceph/replication": "10.109.2.3"}, "fqdn": "node-3.test.domain.local", "nova_cpu_pinning_enabled": false, "user_node_name": "slave-02_compute", "node_roles": ["compute"], "uid": "3"}, "node-2": {"nova_hugepages_enabled": false, "swift_zone": "2", "name": "node-2", "network_roles": {"keystone/api": "10.109.1.4", "neutron/api": "10.109.1.4", "mgmt/database": "10.109.1.4", "sahara/api": "10.109.1.4", "ceilometer/api": "10.109.1.4", "mgmt/vip": "10.109.1.4", "ex": "10.109.3.4", "ceph/public": "10.109.2.2", "ceph/radosgw": "10.109.3.4", "management": "10.109.1.4", "swift/api": "10.109.1.4", "storage": "10.109.2.2", "mgmt/corosync": "10.109.1.4", "glance/glare": "10.109.1.4", "aodh/api": "10.109.1.4", "cinder/api": "10.109.1.4", "public/vip": "10.109.3.4", "swift/replication": "10.109.2.2", "mgmt/messaging": "10.109.1.4", "admin/pxe": "10.109.0.3", "mongo/db": "10.109.1.4", "neutron/private": null, "neutron/floating": null, "fw-admin": "10.109.0.3", "glance/api": "10.109.1.4", "heat/api": "10.109.1.4", "murano/api": "10.109.1.4", "ironic/api": "10.109.1.4", "nova/api": "10.109.1.4", "murano/cfapi": "10.109.1.4", "horizon": "10.109.1.4", "nova/migration": "10.109.1.4", "mgmt/memcache": "10.109.1.4", "cinder/iscsi": "10.109.2.2", "ceph/replication": "10.109.2.2"}, "fqdn": "node-2.test.domain.local", "nova_cpu_pinning_enabled": false, "user_node_name": "slave-01_controller", "node_roles": ["primary-controller"], "uid": "2"}}, "vips": {"vrouter_pub": {"network_role": "public/vip", "vendor_specific": {"iptables_rules": {"ns_start": ["iptables -t nat -A POSTROUTING -o <%INT%> -j MASQUERADE"], "ns_stop": ["iptables -t nat -D POSTROUTING -o <%INT%> -j MASQUERADE"]}}, "namespace": "vrouter", "ipaddr": "10.109.3.2", "node_roles": ["controller", "primary-controller"], "is_user_defined": false}, "management": {"network_role": "mgmt/vip", "vendor_specific": null, "namespace": "haproxy", "ipaddr": "10.109.1.3", "node_roles": ["controller", "primary-controller"], "is_user_defined": false}, "public": {"network_role": "public/vip", "vendor_specific": null, "namespace": "haproxy", "ipaddr": "10.109.3.3", "node_roles": ["controller", "primary-controller"], "is_user_defined": false}, "vrouter": {"network_role": "mgmt/vip", "vendor_specific": null, "namespace": "vrouter", "ipaddr": "10.109.1.2", "node_roles": ["controller", "primary-controller"], "is_user_defined": false}}}, "openstack_version": "liberty-9.0", "storage": {"volumes_ceph": false, "per_pool_pg_nums": {"compute": 128, "default_pg_num": 128, "volumes": 128, "images": 128, "backups": 128, ".rgw": 128}, "bootstrap_osd_key": "AQBOuftWAAAAABAA7Tl4sy2/r4Dllbo+5BPbew==", "volumes_block_device": false, "mon_key": "AQBOuftWAAAAABAA653cC4lobCr2YXF9lOPh/w==", "admin_key": "AQBOuftWAAAAABAAPaAElO/iDyKIwM2p4n14ZQ==", "osd_pool_size": "3", "images_ceph": false, "fsid": "8a70d51a-beef-4116-86c3-bf30dc0c8aa8", "objects_ceph": false, "ephemeral_ceph": false, "volumes_lvm": true, "pg_num": 128, "images_vcenter": false, "radosgw_key": "AQBOuftWAAAAABAAiqRceQL7eqRpsrOHBmyXmQ==", "metadata": {"group": "storage", "weight": 60, "label": "Storage Backends"}}, "master_ip": "10.109.0.2", "access": {"metadata": {"group": "general", "weight": 10, "label": "OpenStack Access"}, "password": "neutronOneController", "user": "neutronOneController", "tenant": "neutronOneController", "email": "admin7@localhost"}, "external_dns": {"dns_list": ["10.109.3.1"], "metadata": {"group": "network", "weight": 30, "label": "Host OS DNS Servers"}}, "murano": {"db_password": "3UOR6397jnY6hpJYjy5ugjGk", "user_password": "kAvwDxyAufLoL2vEtkvjYDvp", "enabled": false, "rabbit_password": "TMf2dnUWeHABhQun5mxLSkb6"}, "murano_settings": {"murano_repo_url": "http://storage.apps.openstack.org/", "metadata": {"restrictions": [{"action": "hide", "message": "Murano is not enabled on the Additional Components section", "condition": "settings:additional_components.murano.value == false"}], "group": "openstack_services", "weight": 20, "label": "Murano Settings"}}, "keystone": {"db_password": "jH7UBgm36Nxz5VMGGYyOnHbZ", "admin_token": "l4rn6dMXVbE7xeXcdw1gSukO"}, "external_mongo": {"mongo_db_name": "ceilometer", "mongo_replset": "", "mongo_user": "ceilometer", "metadata": {"restrictions": [{"action": "hide", "message": "Ceilometer and MongoDB are not enabled on the Additional Components section", "condition": "settings:additional_components.mongo.value == false"}], "group": "openstack_services", "weight": 20, "label": "External MongoDB"}, "mongo_password": "ceilometer", "hosts_ip": ""}, "online": true, "public_network_assignment": {"assign_to_all_nodes": false, "metadata": {"restrictions": [{"action": "hide", "condition": "cluster:net_provider != 'neutron'"}], "group": "network", "weight": 10, "label": "Public network assignment"}}, "corosync": {"group": "226.94.1.1", "verified": false, "port": "12000", "metadata": {"restrictions": [{"action": "hide", "condition": "true"}], "group": "general", "weight": 50, "label": "Corosync"}}, "metadata": {"weight": 10, "label": "Common"}, "status": "ready", "use_vcenter": false, "network_scheme": {"version": "1.1", "transformations": [{"action": "add-br", "name": "br-fw-admin"}, {"action": "add-br", "name": "br-mgmt"}, {"action": "add-br", "name": "br-storage"}, {"action": "add-br", "name": "br-ex"}, {"action": "add-br", "name": "br-floating", "provider": "ovs"}, {"action": "add-patch", "bridges": ["br-floating", "br-ex"], "mtu": 65000, "provider": "ovs"}, {"action": "add-br", "name": "br-prv", "provider": "ovs"}, {"action": "add-br", "name": "br-aux"}, {"action": "add-patch", "bridges": ["br-prv", "br-aux"], "mtu": 65000, "provider": "ovs"}, {"action": "add-port", "bridge": "br-fw-admin", "name": "enp0s3"}, {"action": "add-port", "bridge": "br-ex", "name": "enp0s4"}, {"action": "add-port", "bridge": "br-mgmt", "name": "enp0s5"}, {"action": "add-port", "bridge": "br-aux", "name": "enp0s6"}, {"action": "add-port", "bridge": "br-storage", "name": "enp0s7"}], "roles": {"keystone/api": "br-mgmt", "neutron/api": "br-mgmt", "mgmt/database": "br-mgmt", "sahara/api": "br-mgmt", "ceilometer/api": "br-mgmt", "mgmt/vip": "br-mgmt", "ex": "br-ex", "ceph/public": "br-storage", "ceph/radosgw": "br-ex", "management": "br-mgmt", "swift/api": "br-mgmt", "storage": "br-storage", "mgmt/corosync": "br-mgmt", "glance/glare": "br-mgmt", "aodh/api": "br-mgmt", "cinder/api": "br-mgmt", "public/vip": "br-ex", "swift/replication": "br-storage", "mgmt/messaging": "br-mgmt", "admin/pxe": "br-fw-admin", "mongo/db": "br-mgmt", "neutron/private": "br-prv", "neutron/floating": "br-floating", "fw-admin": "br-fw-admin", "glance/api": "br-mgmt", "heat/api": "br-mgmt", "murano/api": "br-mgmt", "ironic/api": "br-mgmt", "nova/api": "br-mgmt", "murano/cfapi": "br-mgmt", "horizon": "br-mgmt", "nova/migration": "br-mgmt", "mgmt/memcache": "br-mgmt", "cinder/iscsi": "br-storage", "ceph/replication": "br-storage"}, "provider": "lnx", "interfaces": {"enp0s6": {"vendor_specific": {"driver": "e1000", "bus_info": "0000:00:06.0"}}, "enp0s7": {"vendor_specific": {"driver": "e1000", "bus_info": "0000:00:07.0"}}, "enp0s4": {"vendor_specific": {"driver": "e1000", "bus_info": "0000:00:04.0"}}, "enp0s5": {"vendor_specific": {"driver": "e1000", "bus_info": "0000:00:05.0"}}, "enp0s3": {"vendor_specific": {"driver": "e1000", "bus_info": "0000:00:03.0"}}}, "endpoints": {"br-floating": {"IP": "none"}, "br-fw-admin": {"IP": ["10.109.0.3/24"], "vendor_specific": {"provider_gateway": "10.109.0.1"}}, "br-prv": {"IP": "none"}, "br-storage": {"IP": ["10.109.2.2/24"]}, "br-mgmt": {"IP": ["10.109.1.4/24"]}, "br-ex": {"IP": ["10.109.3.4/24"], "vendor_specific": {"provider_gateway": "10.109.3.1"}, "gateway": "10.109.3.1"}}}, "debug": true, "cinder": {"db_password": "9RkYPCQT9V3LerPsp0qvuzmh", "user_password": "n8BMurmecwUWcH52nbdxqPtz", "fixed_key": "f74ce7f535cb61fc0ee8ba77e35b7648fb2796c2862493085e6cfcaa4638ec08"}, "configuration": {}, "management_network_range": "10.109.1.0/24", "service_user": {"password": "bIeTm5B9DL07ESkvbYehgGL1", "homedir": "/var/lib/fuel", "name": "fuel", "sudo": "ALL=(ALL) NOPASSWD: ALL", "root_password": "r00tme", "metadata": {"restrictions": [{"action": "hide", "condition": "true"}], "group": "general", "weight": 10, "label": "Service user account"}}, "test_vm_image": {"os_name": "cirros", "img_path": "/usr/share/cirros-testvm/cirros-x86_64-disk.img", "container_format": "bare", "min_ram": 64, "disk_format": "qcow2", "glance_properties": "", "img_name": "TestVM", "public": "true"}, "workloads_collector": {"username": "fuel_stats_user", "create_user": true, "password": "HFWErbnE19rWSV6djoJorfxg", "enabled": true, "tenant": "services", "metadata": {"restrictions": [{"action": "hide", "condition": "true"}], "group": "general", "weight": 10, "label": "Workloads Collector User"}}, "murano_glance_artifacts_plugin": {"enabled": false}, "auth_key": "", "last_controller": "node-2", "fqdn": "node-2.test.domain.local", "deployed_before": {"value": true}, "kernel_params": {"kernel": "console=tty0 net.ifnames=0 biosdevname=0 rootdelay=90 nomodeset", "metadata": {"group": "general", "weight": 60, "label": "Kernel parameters"}}, "horizon": {"secret_key": "ce9a1b1c2ea03cf64e67995365c87a05a082defae1268eff10c8a39e12a91d52"}, "nova_quota": false, "deployment_id": 1, "quantum": true}