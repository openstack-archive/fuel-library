.\" generated with Ronn/v0.7.3
.\" http://github.com/rtomayko/ronn/tree/0.7.3
.
.TH "PUPPET\-RESOURCE_TYPE" "8" "January 2013" "Puppet Labs, LLC" "Puppet manual"
.
.SH "NAME"
\fBpuppet\-resource_type\fR \- View classes, defined resource types, and nodes from all manifests\.
.
.SH "SYNOPSIS"
puppet resource_type \fIaction\fR [\-\-terminus TERMINUS] [\-\-extra HASH]
.
.SH "DESCRIPTION"
This subcommand reads information about the resource collections (classes, nodes, and defined types) available in Puppet\'s site manifest and modules\.
.
.P
It will eventually be extended to examine native resource types\.
.
.SH "OPTIONS"
Note that any configuration parameter that\'s valid in the configuration file is also a valid long argument, although it may or may not be relevant to the present action\. For example, \fBserver\fR and \fBrun_mode\fR are valid configuration parameters, so you can specify \fB\-\-server <servername>\fR, or \fB\-\-run_mode <runmode>\fR as an argument\.
.
.P
See the configuration file documentation at \fIhttp://docs\.puppetlabs\.com/references/stable/configuration\.html\fR for the full list of acceptable parameters\. A commented list of all configuration options can also be generated by running puppet with \fB\-\-genconfig\fR\.
.
.TP
\-\-render\-as FORMAT
The format in which to render output\. The most common formats are \fBjson\fR, \fBs\fR (string), \fByaml\fR, and \fBconsole\fR, but other options such as \fBdot\fR are sometimes available\.
.
.TP
\-\-verbose
Whether to log verbosely\.
.
.TP
\-\-debug
Whether to log debug information\.
.
.TP
\-\-extra HASH
A terminus can take additional arguments to refine the operation, which are passed as an arbitrary hash to the back\-end\. Anything passed as the extra value is just send direct to the back\-end\.
.
.TP
\-\-terminus TERMINUS
Indirector faces expose indirected subsystems of Puppet\. These subsystems are each able to retrieve and alter a specific type of data (with the familiar actions of \fBfind\fR, \fBsearch\fR, \fBsave\fR, and \fBdestroy\fR) from an arbitrary number of pluggable backends\. In Puppet parlance, these backends are called terminuses\.
.
.IP
Almost all indirected subsystems have a \fBrest\fR terminus that interacts with the puppet master\'s data\. Most of them have additional terminuses for various local data models, which are in turn used by the indirected subsystem on the puppet master whenever it receives a remote request\.
.
.IP
The terminus for an action is often determined by context, but occasionally needs to be set explicitly\. See the "Notes" section of this face\'s manpage for more details\.
.
.SH "ACTIONS"
.
.TP
\fBdestroy\fR \- Invalid for this subcommand\.
\fBSYNOPSIS\fR
.
.IP
puppet resource_type destroy [\-\-terminus TERMINUS] [\-\-extra HASH] \fIkey\fR
.
.IP
\fBDESCRIPTION\fR
.
.IP
Invalid for this subcommand\.
.
.TP
\fBfind\fR \- Retrieve info about a resource collection\.
\fBSYNOPSIS\fR
.
.IP
puppet resource_type find [\-\-terminus TERMINUS] [\-\-extra HASH] \fIcollection_name\fR
.
.IP
\fBDESCRIPTION\fR
.
.IP
Retrieve info about a resource collection\.
.
.IP
\fBRETURNS\fR
.
.IP
A hash of info about the requested resource collection\. When used from the Ruby API: returns a Puppet::Resource::Type object\.
.
.IP
RENDERING ISSUES: yaml and string output for this indirection are currently unusable; use json instead\.
.
.IP
\fBNOTES\fR
.
.IP
If two resource collections share the same name (e\.g\. you have both a node and a class named "default"), \fBfind\fR will only return one of them\. This can be worked around by using \fBsearch\fR instead\.
.
.TP
\fBinfo\fR \- Print the default terminus class for this face\.
\fBSYNOPSIS\fR
.
.IP
puppet resource_type info [\-\-terminus TERMINUS] [\-\-extra HASH]
.
.IP
\fBDESCRIPTION\fR
.
.IP
Prints the default terminus class for this subcommand\. Note that different run modes may have different default termini; when in doubt, specify the run mode with the \'\-\-run_mode\' option\.
.
.TP
\fBsave\fR \- Invalid for this subcommand\.
\fBSYNOPSIS\fR
.
.IP
puppet resource_type save [\-\-terminus TERMINUS] [\-\-extra HASH] \fIkey\fR
.
.IP
\fBDESCRIPTION\fR
.
.IP
Invalid for this subcommand\.
.
.TP
\fBsearch\fR \- Search for collections matching a regular expression\.
\fBSYNOPSIS\fR
.
.IP
puppet resource_type search [\-\-terminus TERMINUS] [\-\-extra HASH] \fIregular_expression\fR
.
.IP
\fBDESCRIPTION\fR
.
.IP
Search for collections matching a regular expression\.
.
.IP
\fBRETURNS\fR
.
.IP
An array of hashes of resource collection info\. When used from the Ruby API: returns an array of Puppet::Resource::Type objects\.
.
.IP
RENDERING ISSUES: yaml and string output for this indirection are currently unusable; use json instead\.
.
.SH "EXAMPLES"
\fBfind\fR
.
.P
Retrieve info about a specific locally\-defined class:
.
.P
$ puppet resource_type find ntp::disabled
.
.P
Retrieve info from the puppet master about a specific class:
.
.P
$ puppet resource_type find ntp \-\-terminus rest
.
.P
\fBsearch\fR
.
.P
Retrieve all classes, nodes, and defined types:
.
.P
$ puppet resource_type search \'\.*\'
.
.P
Search for classes related to Nagios:
.
.P
$ puppet resource_type search nagios
.
.SH "NOTES"
The \fBfind\fR and \fBsearch\fR actions return similar hashes of resource collection info\. These hashes will include the following four keys:
.
.IP "\(bu" 4
\fBfile\fR (a string)
.
.IP "\(bu" 4
\fBname\fR (a string)
.
.IP "\(bu" 4
\fBtype\fR (\fIhostclass\fR, \fIdefinition\fR, or \fInode\fR)
.
.IP "\(bu" 4
\fBline\fR (an integer)
.
.IP "" 0
.
.P
They may optionally include the following keys:
.
.IP "\(bu" 4
\fBparent\fR (\fIname_of_resource_collection\fR)
.
.IP "\(bu" 4
\fBarguments\fR (a hash of parameters and default values)
.
.IP "\(bu" 4
\fBdoc\fR (a string)
.
.IP "" 0
.
.P
This subcommand is an indirector face, which exposes \fBfind\fR, \fBsearch\fR, \fBsave\fR, and \fBdestroy\fR actions for an indirected subsystem of Puppet\. Valid termini for this face include:
.
.IP "\(bu" 4
\fBparser\fR
.
.IP "\(bu" 4
\fBrest\fR
.
.IP "" 0
.
.SH "COPYRIGHT AND LICENSE"
Copyright 2011 by Puppet Labs Apache 2 license; see COPYING
