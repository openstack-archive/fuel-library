# POST_DEPLOYMENT TASKS
- id: enable_quorum
  type: shell
  version: 2.1.0
  role: [primary-controller]
  requires: [post_deployment_start]
  required_for: [post_deployment_end]
  condition:
    yaql_exp: "changed($.nodes) or changed($.get('corosync_roles'))"
  cross-depends:
    - name: dns-client
    - name: ntp-server
    - name: public_vip_ping
  parameters:
    cmd: ruby /etc/puppet/modules/osnailyfacter/modular/astute/enable_quorum.rb
    timeout: 180

- id: upload_cirros
  type: shell
  version: 2.1.0
  role: [primary-controller]
  requires: [enable_quorum]
  required_for: [post_deployment_end]
  condition:
    yaql_exp: >
      changedAny($.test_vm_image, $.glance, $.network_metadata.vips,
      $.get('region', 'RegionOne'), $.get('use_ssl'))
  cross-depends:
    - name: enable_quroum
  parameters:
    cmd: ruby /etc/puppet/modules/osnailyfacter/modular/astute/upload_cirros.rb
    retries: 3
    interval: 20
    timeout: 180

- id: upload_nodes_info
  type: skipped
  version: 2.1.0
  role: ['/.*/']
  requires: [post_deployment_start]

- id: upload_configuration
  type: upload_file
  version: 2.1.0
  role: ['master', '/.*/']
  condition:
    yaql_exp: 'changed($)'
  requires: [override_configuration]
  required_for: [pre_deployment_end]
  refresh_on: ['*']
  parameters:
    path: /etc/fuel/cluster/{CLUSTER_ID}/astute.yaml
    timeout: 180
    data:
      yaql_exp: '$.toYaml()'

- id: configuration_symlink
  type: shell
  version: 2.1.0
  role: ['/.*/']
  condition:
    yaql_exp: '$.uid in added($.nodes).uid'
  requires: [upload_configuration]
  required_for: [pre_deployment_end]
  parameters:
    cmd: ln -sf /etc/fuel/cluster/{CLUSTER_ID}/astute.yaml /etc/astute.yaml
    timeout: 180

- id: update_hosts
  type: puppet
  version: 2.1.0
  role: ['/.*/']
  required_for: [post_deployment_end]
  requires: [upload_nodes_info]
  condition:
    yaql_exp: 'changed($.network_metadata)'
  parameters:
    puppet_manifest: /etc/puppet/modules/osnailyfacter/modular/hosts/hosts.pp
    puppet_modules: /etc/puppet/modules
    timeout: 3600
    cwd: /

- id: vcenter_compute_zones_create
  type: shell
  version: 2.1.0
  role: [primary-controller, compute-vmware]
  requires: [post_deployment_start, enable_nova_compute_service]
  required_for: [post_deployment_end]
  condition:
    yaql_exp: '$.use_vcenter and changed($.use_vcenter)'
  parameters:
    cmd: /usr/bin/python /etc/puppet/modules/osnailyfacter/modular/astute/vcenter_hooks.py --create_zones
    timeout: 180

- id: disable_keystone_service_token
  type: puppet
  version: 2.0.0
  role: [primary-controller, controller]
  requires: [upload_cirros]
  required_for: [post_deployment_end]
  cross-depends:
    - name: upload_cirros
  parameters:
    puppet_manifest: /etc/puppet/modules/osnailyfacter/modular/astute/service_token_off.pp
    puppet_modules: /etc/puppet/modules
    timeout: 180
    cwd: /

- id: public_vip_ping
  type: puppet
  version: 2.1.0
  role: [primary-controller, controller]
  requires: [post_deployment_start]
  required_for: [post_deployment_end]
  condition:
    yaql_exp: "changed($.network_scheme) or changed($.get('run_ping_checker'))"
  parameters:
    puppet_manifest: /etc/puppet/modules/osnailyfacter/modular/virtual_ips/public_vip_ping.pp
    puppet_modules: /etc/puppet/modules
    timeout: 3600
    cwd: /

- id: configure_default_route
  type: puppet
  version: 2.1.0
  role: [primary-mongo, mongo, compute, compute-vmware, ceph-osd, cinder, cinder-vmware]
  requires: [post_deployment_start]
  required_for: [post_deployment_end]
  condition:
    yaql_exp: "changedAny($.network_scheme, $.network_metadata.vips.management)"
  parameters:
    puppet_manifest: /etc/puppet/modules/osnailyfacter/modular/netconfig/configure_default_route.pp
    puppet_modules: /etc/puppet/modules
    timeout: 3600
    cwd: /

#PRE DEPLOYMENT
- id: rsync_core_puppet
  type: sync
  version: 2.0.0
  role: ['/.*/']
  requires: [pre_deployment_start]
  required_for: [pre_deployment_end]
  parameters:
    src: rsync://{MASTER_IP}:/puppet/{OPENSTACK_VERSION}/modules/
    dst: /etc/puppet/modules
    timeout: 180


- id: clear_nodes_info
  type: skipped
  version: 2.0.0
  role: ['/.*/']
  requires: [pre_deployment_start]
  required_for: [pre_deployment_end]
  parameters:
    cmd: rm -f /etc/hiera/nodes.yaml
    retries: 1

- id: copy_keys
  type: copy_files
  version: 2.0.0
  role: ['/.*/']
  required_for: [pre_deployment_end]
  requires: [generate_keys]
  cross-depends:
      - name: generate_keys
        role: master
  parameters:
    files:
      - src: /var/lib/fuel/keys/{CLUSTER_ID}/neutron/neutron.pub
        dst: /var/lib/astute/neutron/neutron.pub
      - src: /var/lib/fuel/keys/{CLUSTER_ID}/neutron/neutron
        dst: /var/lib/astute/neutron/neutron
      - src: /var/lib/fuel/keys/{CLUSTER_ID}/nova/nova.pub
        dst: /var/lib/astute/nova/nova.pub
      - src: /var/lib/fuel/keys/{CLUSTER_ID}/nova/nova
        dst: /var/lib/astute/nova/nova
      - src: /var/lib/fuel/keys/{CLUSTER_ID}/mysql/mysql.pub
        dst: /var/lib/astute/mysql/mysql.pub
      - src: /var/lib/fuel/keys/{CLUSTER_ID}/mysql/mysql
        dst: /var/lib/astute/mysql/mysql
      - src: /var/lib/fuel/keys/{CLUSTER_ID}/mongodb/mongodb.key
        dst: /var/lib/astute/mongodb/mongodb.key
      - src: /var/lib/fuel/keys/{CLUSTER_ID}/fernet-keys/0
        dst: /var/lib/astute/keystone/0
      - src: /var/lib/fuel/keys/{CLUSTER_ID}/fernet-keys/1
        dst: /var/lib/astute/keystone/1
    permissions: '0600'
    dir_permissions: '0700'

- id: generate_keys
  type: shell
  version: 2.0.0
  role: master
  requires: [pre_deployment_start]
  required_for: [copy_keys]
  parameters:
    cmd: sh /etc/puppet/modules/osnailyfacter/modular/astute/generate_keys.sh -p /var/lib/fuel/keys/ -i {CLUSTER_ID} -o 'mongodb' -s 'neutron nova mysql' -f '0 1'
    timeout: 180

- id: generate_haproxy_keys
  type: shell
  version: 2.1.0
  role: master
  requires: [pre_deployment_start]
  condition:
    yaql_exp: &public_ssl >
      (changedAny($.public_ssl.horizon, $.public_ssl.services)) and
      ($.public_ssl.horizon or $.public_ssl.services) and
      $.public_ssl.cert_source = 'self_signed'
  required_for: [copy_haproxy_keys]
  parameters:
    cmd: sh /etc/puppet/modules/osnailyfacter/modular/astute/generate_haproxy_keys.sh -i {CLUSTER_ID} -h {CN_HOSTNAME} -o 'haproxy' -p /var/lib/fuel/keys/
    timeout: 180

- id: copy_haproxy_keys
  type: copy_files
  version: 2.1.0
  role: ['/.*/']
  condition:
    yaql_exp: >
      (((changedAny($.public_ssl.horizon, $.public_ssl.services)) and
          ($.public_ssl.horizon or $.public_ssl.services) and
          (not (old($.public_ssl.horizon) or old($.public_ssl.services)))) or
        (($.public_ssl.horizon or $.public_ssl.services) and
          ($.uid in added($.nodes).uid))) and
      $.public_ssl.cert_source = 'self_signed'
  required_for: [pre_deployment_end]
  requires: [generate_haproxy_keys]
  cross-depends:
      - name: generate_haproxy_keys
        role: master
  parameters:
    files:
      - src: /var/lib/fuel/keys/{CLUSTER_ID}/haproxy/public_haproxy.pem
        dst: /var/lib/astute/haproxy/public_haproxy.pem
      - src: /var/lib/fuel/keys/{CLUSTER_ID}/haproxy/public_haproxy.crt
        dst: /etc/pki/tls/certs/public_haproxy.pem
    permissions: '0600'
    dir_permissions: '0700'

- id: sync_time
  type: shell
  version: 2.1.0
  role: ['/.*/']
  condition:
    yaql_exp: '$.uid in added($.nodes).uid'
  requires: [pre_deployment_start]
  required_for: [pre_deployment_end]
  parameters:
    cmd: timeout -s9 40 ntpdate -u -v -s $(awk '/^server/ { if ($2 !~ /127\.127\.[0-9]+\.[0-9]+/) {ORS=" "; print $2}}' /etc/ntp.conf)
    retries: 10
    interval: 30
    timeout: 300

- id: pre_hiera_config
  type: puppet
  version: 2.1.0
  role: ['/.*/']
  condition:
    yaql_exp: '$.uid in added($.nodes).uid'
  requires: [pre_deployment_start, rsync_core_puppet]
  required_for: [pre_deployment_end]
  parameters:
    puppet_manifest: /etc/puppet/modules/osnailyfacter/modular/hiera/hiera.pp
    puppet_modules: /etc/puppet/modules
    timeout: 3600
    cwd: /

- id: override_configuration
  type: puppet
  version: 2.1.0
  role: ['/.*/']
  condition:
    yaql_exp: '$.uid in added($.nodes).uid'
  requires: [pre_hiera_config]
  required_for: [pre_deployment_end]
  parameters:
    puppet_manifest: /etc/puppet/modules/osnailyfacter/modular/hiera/override_configuration.pp
    puppet_modules: /etc/puppet/modules
    timeout: 180
    cwd: /

- id: dump_rabbitmq_definitions
  type: puppet
  version: 2.1.0
  role: [primary-controller, controller]
  requires: [post_deployment_start]
  required_for: [post_deployment_end]
  condition:
    yaql_exp: >
      changedAny($.rabbit, $.get('management_bind_ip_address'),
      $.get('rabbit_management_port'))
  parameters:
    puppet_manifest: /etc/puppet/modules/osnailyfacter/modular/astute/dump_rabbitmq_definitions.pp
    puppet_modules: /etc/puppet/modules
    timeout: 180
    cwd: /

- id: ironic_post_swift_key
  type: shell
  version: 2.1.0
  role: [primary-controller]
  condition:
    yaql_exp: &ironic_enabled '$.ironic.enabled and changed($.ironic.enabled)'
  requires: [enable_quorum, enable_rados]
  required_for: [post_deployment_end]
  parameters:
    cmd: ruby /etc/puppet/modules/osnailyfacter/modular/astute/ironic_post_swift_key.rb
    retries: 3
    interval: 20
    timeout: 180

- id: ironic_upload_images
  type: shell
  version: 2.1.0
  role: [primary-controller]
  condition:
    yaql_exp: *ironic_enabled
  required_for: [post_deployment_end]
  requires: [enable_quorum, enable_rados]
  parameters:
    cmd: ruby /etc/puppet/modules/openstack_tasks/examples/ironic/upload_images.rb {CLUSTER_ID}
    retries: 3
    interval: 20
    timeout: 180

- id: ironic_copy_bootstrap_key
  type: copy_files
  version: 2.1.0
  role: [ironic]
  condition:
    yaql_exp: >
      ($.ironic.enabled and
      (changed($.ironic.enabled) or ('ironic' in added($.roles))))
  required_for: [pre_deployment_end]
  requires: [pre_deployment_start]
  parameters:
    files:
      - src: /var/lib/fuel/keys/{CLUSTER_ID}/ironic/ironic.pub
        dst: /var/lib/astute/ironic/ironic.pub
      - src: /var/lib/fuel/keys/{CLUSTER_ID}/ironic/ironic
        dst: /var/lib/astute/ironic/ironic
    permissions: '0600'
    dir_permissions: '0700'
