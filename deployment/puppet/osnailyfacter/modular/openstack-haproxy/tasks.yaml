- id: openstack-haproxy
  type: puppet
  version: 2.0.0
  groups: [primary-controller, controller]
  required_for: [deploy_end]
  requires: [deploy_start, openstack-haproxy-ceilometer, openstack-haproxy-aodh, openstack-haproxy-cinder, openstack-haproxy-glance, openstack-haproxy-heat, openstack-haproxy-horizon, openstack-haproxy-keystone, openstack-haproxy-murano, openstack-haproxy-mysqld, openstack-haproxy-neutron, openstack-haproxy-nova, openstack-haproxy-radosgw, openstack-haproxy-sahara, openstack-haproxy-swift, openstack-haproxy-stats, openstack-haproxy-ironic]
  parameters:
    puppet_manifest: /etc/puppet/modules/osnailyfacter/modular/openstack-haproxy/openstack-haproxy.pp
    puppet_modules: /etc/puppet/modules
    timeout: 300
  test_pre:
    cmd: ruby /etc/puppet/modules/osnailyfacter/modular/openstack-haproxy/openstack-haproxy_pre.rb

- id: openstack-haproxy-horizon
  type: puppet
  version: 2.1.0
  groups: [primary-controller, controller]
  required_for: [deploy_end]
  requires: [deploy_start, primary-cluster-haproxy, cluster-haproxy]
  condition:
    yaql_exp: >
      changedAny($.horizon, $.public_ssl, $.get('use_ssl'),
      $.get('external_lb'),
      $.network_metadata.nodes.values().where(
        ('controller' in $.node_roles) or
        ('primary-controller' in $.node_roles)),
      $.network_metadata.vips)
  cross-depends:
    - name: /^(primary-)?cluster-haproxy$/
      role: self
  parameters:
    puppet_manifest: /etc/puppet/modules/osnailyfacter/modular/openstack-haproxy/openstack-haproxy-horizon.pp
    puppet_modules: /etc/puppet/modules
    timeout: 300
  test_pre:
    cmd: ruby /etc/puppet/modules/osnailyfacter/modular/openstack-haproxy/openstack-haproxy_pre.rb
  test_post:
    cmd: ruby /etc/puppet/modules/osnailyfacter/modular/openstack-haproxy/openstack-haproxy-horizon_post.rb

- id: openstack-haproxy-keystone
  type: puppet
  version: 2.1.0
  groups: [primary-controller, controller]
  required_for: [deploy_end]
  requires: [primary-cluster-haproxy, cluster-haproxy]
  cross-depended-by:
    - name: deploy_end
      role: self
  condition:
    yaql_exp: >
      changedAny($.keystone, $.public_ssl, $.get('use_ssl'),
      $.get('external_lb'),
      $.network_metadata.nodes.values().where(
        ('controller' in $.node_roles) or
        ('primary-controller' in $.node_roles)),
      $.get('keystone_names'), $.get('keystone_ipaddresses'),
      $.get('public_service_endpoint'), $.network_metadata.vips)
  cross-depends:
    - name: /^(primary-)?cluster-haproxy$/
      role: self
  parameters:
    puppet_manifest: /etc/puppet/modules/osnailyfacter/modular/openstack-haproxy/openstack-haproxy-keystone.pp
    puppet_modules: /etc/puppet/modules
    timeout: 300
  test_pre:
    cmd: ruby /etc/puppet/modules/osnailyfacter/modular/openstack-haproxy/openstack-haproxy_pre.rb
  test_post:
    cmd: ruby /etc/puppet/modules/osnailyfacter/modular/openstack-haproxy/openstack-haproxy-keystone_post.rb

- id: openstack-haproxy-nova
  type: puppet
  version: 2.1.0
  groups: [primary-controller, controller]
  required_for: [deploy_end]
  requires: [deploy_start, primary-cluster-haproxy, cluster-haproxy]
  condition:
    yaql_exp: >
      changedAny($.nova, $.public_ssl, $.get('use_ssl'), $.get('external_lb'),
      $.network_metadata.nodes.values().where(
        ('controller' in $.node_roles) or
        ('primary-controller' in $.node_roles)),
      $.network_metadata.vips)
  cross-depends:
    - name: /^(primary-)?cluster-haproxy$/
      role: self
  parameters:
    puppet_manifest: /etc/puppet/modules/osnailyfacter/modular/openstack-haproxy/openstack-haproxy-nova.pp
    puppet_modules: /etc/puppet/modules
    timeout: 300
  test_pre:
    cmd: ruby /etc/puppet/modules/osnailyfacter/modular/openstack-haproxy/openstack-haproxy_pre.rb
  test_post:
    cmd: ruby /etc/puppet/modules/osnailyfacter/modular/openstack-haproxy/openstack-haproxy-nova_post.rb

- id: openstack-haproxy-heat
  type: puppet
  version: 2.1.0
  groups: [primary-controller, controller]
  required_for: [deploy_end]
  requires: [deploy_start, primary-cluster-haproxy, cluster-haproxy]
  condition:
    yaql_exp: >
      $.heat.enabled and changedAny($.heat, $.public_ssl, $.get('use_ssl'),
      $.get('external_lb'), $.get('heat_roles'),
      $.network_metadata.nodes.values().where(
        ('controller' in $.node_roles) or
        ('primary-controller' in $.node_roles)),
      $.network_metadata.vips)
  cross-depends:
    - name: /^(primary-)?cluster-haproxy$/
      role: self
  parameters:
    puppet_manifest: /etc/puppet/modules/osnailyfacter/modular/openstack-haproxy/openstack-haproxy-heat.pp
    puppet_modules: /etc/puppet/modules
    timeout: 300
  test_pre:
    cmd: ruby /etc/puppet/modules/osnailyfacter/modular/openstack-haproxy/openstack-haproxy_pre.rb
  test_post:
    cmd: ruby /etc/puppet/modules/osnailyfacter/modular/openstack-haproxy/openstack-haproxy-heat_post.rb

- id: openstack-haproxy-glance
  type: puppet
  version: 2.1.0
  groups: [primary-controller, controller]
  required_for: [deploy_end]
  requires: [deploy_start, primary-cluster-haproxy, cluster-haproxy]
  condition:
    yaql_exp: >
      changedAny($.glance, $.public_ssl, $.get('use_ssl'),
      $.network_metadata.nodes.values().where(
        ('controller' in $.node_roles) or
        ('primary-controller' in $.node_roles)),
      $.network_metadata.vips)
  cross-depends:
    - name: /^(primary-)?cluster-haproxy$/
      role: self
  parameters:
    puppet_manifest: /etc/puppet/modules/osnailyfacter/modular/openstack-haproxy/openstack-haproxy-glance.pp
    puppet_modules: /etc/puppet/modules
    timeout: 300
  test_pre:
    cmd: ruby /etc/puppet/modules/osnailyfacter/modular/openstack-haproxy/openstack-haproxy_pre.rb
  test_post:
    cmd: ruby /etc/puppet/modules/osnailyfacter/modular/openstack-haproxy/openstack-haproxy-glance_post.rb

- id: openstack-haproxy-cinder
  type: puppet
  version: 2.1.0
  groups: [primary-controller, controller]
  required_for: [deploy_end]
  requires: [deploy_start, primary-cluster-haproxy, cluster-haproxy]
  condition:
    yaql_exp: >
      changedAny($.cinder, $.public_ssl, $.get('use_ssl'),
      $.get('external_lb'),
      $.network_metadata.nodes.values().where(
        ('controller' in $.node_roles) or
        ('primary-controller' in $.node_roles)),
      $.network_metadata.vips)
  cross-depends:
    - name: /^(primary-)?cluster-haproxy$/
      role: self
  parameters:
    puppet_manifest: /etc/puppet/modules/osnailyfacter/modular/openstack-haproxy/openstack-haproxy-cinder.pp
    puppet_modules: /etc/puppet/modules
    timeout: 300
  test_pre:
    cmd: ruby /etc/puppet/modules/osnailyfacter/modular/openstack-haproxy/openstack-haproxy_pre.rb
  test_post:
    cmd: ruby /etc/puppet/modules/osnailyfacter/modular/openstack-haproxy/openstack-haproxy-cinder_post.rb

- id: openstack-haproxy-neutron
  type: puppet
  version: 2.1.0
  groups: [primary-controller, controller]
  required_for: [deploy_end]
  requires: [deploy_start, primary-cluster-haproxy, cluster-haproxy]
  condition:
    yaql_exp: >
      changedAny($.quantum, $.public_ssl, $.get('use_ssl'),
      $.get('external_lb'),
      $.network_metadata.nodes.values().where(
        ('controller' in $.node_roles) or
        ('primary-controller' in $.node_roles)),
      $.get('neutron_names'), $.get('neutron_ipaddresses'),
      $.network_metadata.vips)
  cross-depends:
    - name: /^(primary-)?cluster-haproxy$/
      role: self
  parameters:
    puppet_manifest: /etc/puppet/modules/osnailyfacter/modular/openstack-haproxy/openstack-haproxy-neutron.pp
    puppet_modules: /etc/puppet/modules
    timeout: 300
  test_pre:
    cmd: ruby /etc/puppet/modules/osnailyfacter/modular/openstack-haproxy/openstack-haproxy_pre.rb
  test_post:
    cmd: ruby /etc/puppet/modules/osnailyfacter/modular/openstack-haproxy/openstack-haproxy-neutron_post.rb

- id: openstack-haproxy-mysqld
  type: puppet
  version: 2.1.0
  groups: [primary-controller, controller]
  required_for: [deploy_end]
  requires: [deploy_start, primary-cluster-haproxy, cluster-haproxy]
  condition:
    yaql_exp: >
      changedAny($.mysql, $.get('custom_mysql_setup_class', 'galera'),
      $.get('external_lb'), $.get('database_nodes'), $.get('mysqld_names'),
      $.get('mysqld_ipaddresses'), $.network_metadata.vips,
      $.network_metadata.nodes.values().where(
        ('controller' in $.node_roles) or
        ('primary-controller' in $.node_roles)),
      $.get('database_vip'), ('primary-controller' in $.roles))
  parameters:
    puppet_manifest: /etc/puppet/modules/osnailyfacter/modular/openstack-haproxy/openstack-haproxy-mysqld.pp
    puppet_modules: /etc/puppet/modules
    timeout: 300
  test_pre:
    cmd: ruby /etc/puppet/modules/osnailyfacter/modular/openstack-haproxy/openstack-haproxy_pre.rb
  test_post:
    cmd: ruby /etc/puppet/modules/osnailyfacter/modular/openstack-haproxy/openstack-haproxy-mysqld_post.rb

- id: openstack-haproxy-swift
  type: puppet
  version: 2.1.0
  groups: [primary-controller, controller]
  required_for: [deploy_end]
  requires: [deploy_start, primary-cluster-haproxy, cluster-haproxy]
  condition:
    yaql_exp: >
      changedAny($.storage, $.get('swift_proxy_roles'),
      $.network_metadata.nodes.values().where(
        ('controller' in $.node_roles) or
        ('primary-controller' in $.node_roles)),
      $.public_ssl, $.get('use_ssl'), $.get('external_lb'),
      $.get('swift_server_names'), $.get('swift_ipaddresses'),
      $.network_metadata.vips, $.ironic, $.network_scheme,
      $.network_metadata.nodes.get(concat('node-', $.uid)))
  cross-depends:
    - name: /^(primary-)?cluster-haproxy$/
      role: self
  parameters:
    puppet_manifest: /etc/puppet/modules/osnailyfacter/modular/openstack-haproxy/openstack-haproxy-swift.pp
    puppet_modules: /etc/puppet/modules
    timeout: 300
  test_pre:
    cmd: ruby /etc/puppet/modules/osnailyfacter/modular/openstack-haproxy/openstack-haproxy_pre.rb
  test_post:
    cmd: ruby /etc/puppet/modules/osnailyfacter/modular/openstack-haproxy/openstack-haproxy-swift_post.rb

- id: openstack-haproxy-radosgw
  type: puppet
  version: 2.1.0
  groups: [primary-controller, controller]
  required_for: [deploy_end]
  requires: [deploy_start, primary-cluster-haproxy, cluster-haproxy]
  condition:
    yaql_exp: >
      changedAny($.storage, $.public_ssl, $.get('use_ssl'),
      $.get('external_lb'),
      $.network_metadata.nodes.values().where(
        ('controller' in $.node_roles) or
        ('primary-controller' in $.node_roles)),
      $.network_metadata.vips, $.ironic)
  cross-depends:
    - name: /^(primary-)?cluster-haproxy$/
      role: self
  parameters:
    puppet_manifest: /etc/puppet/modules/osnailyfacter/modular/openstack-haproxy/openstack-haproxy-radosgw.pp
    puppet_modules: /etc/puppet/modules
    timeout: 300
  test_pre:
    cmd: ruby /etc/puppet/modules/osnailyfacter/modular/openstack-haproxy/openstack-haproxy_pre.rb
  test_post:
    cmd: ruby /etc/puppet/modules/osnailyfacter/modular/openstack-haproxy/openstack-haproxy-radosgw_post.rb

- id: openstack-haproxy-ceilometer
  type: puppet
  version: 2.1.0
  groups: [primary-controller, controller]
  required_for: [deploy_end]
  requires: [deploy_start, primary-cluster-haproxy, cluster-haproxy]
  condition:
    yaql_exp: >
      $.ceilometer.enabled and changedAny($.ceilometer, $.public_ssl,
      $.get('use_ssl'), $.get('external_lb'),
      $.network_metadata.nodes.values().where(
        ('controller' in $.node_roles) or
        ('primary-controller' in $.node_roles)),
      $.network_metadata.vips)
  cross-depends:
    - name: /^(primary-)?cluster-haproxy$/
      role: self
  parameters:
    puppet_manifest: /etc/puppet/modules/osnailyfacter/modular/openstack-haproxy/openstack-haproxy-ceilometer.pp
    puppet_modules: /etc/puppet/modules
    timeout: 300
  test_pre:
    cmd: ruby /etc/puppet/modules/osnailyfacter/modular/openstack-haproxy/openstack-haproxy_pre.rb
  test_post:
    cmd: ruby /etc/puppet/modules/osnailyfacter/modular/openstack-haproxy/openstack-haproxy-ceilometer_post.rb

- id: openstack-haproxy-aodh
  type: puppet
  version: 2.1.0
  groups: [primary-controller, controller]
  required_for: [deploy_end]
  requires: [deploy_start, primary-cluster-haproxy, cluster-haproxy]
  condition:
    yaql_exp: >
      changedAny($.ceilometer, $.public_ssl, $.get('use_ssl'),
      $.get('external_lb'),
      $.network_metadata.nodes.values().where(
        ('controller' in $.node_roles) or
        ('primary-controller' in $.node_roles)),
      $.network_metadata.vips)
  cross-depends:
    - name: /^(primary-)?cluster-haproxy$/
      role: self
  parameters:
    puppet_manifest: /etc/puppet/modules/osnailyfacter/modular/openstack-haproxy/openstack-haproxy-aodh.pp
    puppet_modules: /etc/puppet/modules
    timeout: 300
  test_pre:
    cmd: ruby /etc/puppet/modules/osnailyfacter/modular/openstack-haproxy/openstack-haproxy_pre.rb
  test_post:
    cmd: ruby /etc/puppet/modules/osnailyfacter/modular/openstack-haproxy/openstack-haproxy-aodh_post.rb

- id: openstack-haproxy-sahara
  type: puppet
  version: 2.1.0
  groups: [primary-controller, controller]
  required_for: [deploy_end]
  requires: [deploy_start, primary-cluster-haproxy, cluster-haproxy]
  condition:
    yaql_exp: >
      $.sahara.enabled and changedAny($.sahara, $.public_ssl,
      $.get('use_ssl'), $.get('external_lb'), $.get('sahara_roles'),
      $.network_metadata.nodes.values().where(
        ('controller' in $.node_roles) or
        ('primary-controller' in $.node_roles)),
      $.network_metadata.vips)
  cross-depends:
    - name: /^(primary-)?cluster-haproxy$/
      role: self
  parameters:
    puppet_manifest: /etc/puppet/modules/osnailyfacter/modular/openstack-haproxy/openstack-haproxy-sahara.pp
    puppet_modules: /etc/puppet/modules
    timeout: 300
  test_pre:
    cmd: ruby /etc/puppet/modules/osnailyfacter/modular/openstack-haproxy/openstack-haproxy_pre.rb
  test_post:
    cmd: ruby /etc/puppet/modules/osnailyfacter/modular/openstack-haproxy/openstack-haproxy-sahara_post.rb

- id: openstack-haproxy-murano
  type: puppet
  version: 2.1.0
  groups: [primary-controller, controller]
  required_for: [deploy_end]
  requires: [deploy_start, primary-cluster-haproxy, cluster-haproxy]
  condition:
    yaql_exp: >
      $.murano.enabled and changedAny($.murano, $.get('murano-cfapi'),
      $.public_ssl, $.get('use_ssl'), $.get('external_lb'),
      $.get('murano_roles'),
      $.network_metadata.nodes.values().where(
        ('controller' in $.node_roles) or
        ('primary-controller' in $.node_roles)),
      $.get('murano_names'), $.get('murano_ipaddresses'),
      $.network_metadata.vips)
  cross-depends:
    - name: /^(primary-)?cluster-haproxy$/
      role: self
  parameters:
    puppet_manifest: /etc/puppet/modules/osnailyfacter/modular/openstack-haproxy/openstack-haproxy-murano.pp
    puppet_modules: /etc/puppet/modules
    timeout: 300
  test_pre:
    cmd: ruby /etc/puppet/modules/osnailyfacter/modular/openstack-haproxy/openstack-haproxy_pre.rb
  test_post:
    cmd: ruby /etc/puppet/modules/osnailyfacter/modular/openstack-haproxy/openstack-haproxy-murano_post.rb

- id: openstack-haproxy-stats
  type: puppet
  version: 2.1.0
  groups: [primary-controller, controller]
  required_for: [deploy_end]
  requires: [deploy_start, primary-cluster-haproxy, cluster-haproxy]
  condition:
    yaql_exp: "changed($.get('external_lb')) or changed($.network_metadata.vips)"
  cross-depends:
    - name: /^(primary-)?cluster-haproxy$/
      role: self
  parameters:
    puppet_manifest: /etc/puppet/modules/osnailyfacter/modular/openstack-haproxy/openstack-haproxy-stats.pp
    puppet_modules: /etc/puppet/modules
    timeout: 300
  test_post:
    cmd: ruby /etc/puppet/modules/osnailyfacter/modular/openstack-haproxy/openstack-haproxy-stats_post.rb

- id: openstack-haproxy-ironic
  type: puppet
  version: 2.1.0
  groups: [primary-controller, controller]
  condition:
    yaql_exp: >
      $.ironic.enabled and changedAny($.get('ironic_api_nodes'),
      $.network_metadata, $.public_ssl, $.get('use_ssl'), $.get('external_lb'))
  required_for: [deploy_end]
  requires: [deploy_start, primary-cluster-haproxy, cluster-haproxy]
  cross-depends:
    - name: /^(primary-)?cluster-haproxy$/
      role: self
  parameters:
    puppet_manifest: /etc/puppet/modules/osnailyfacter/modular/openstack-haproxy/openstack-haproxy-ironic.pp
    puppet_modules: /etc/puppet/modules
    timeout: 300
  test_pre:
    cmd: ruby /etc/puppet/modules/osnailyfacter/modular/openstack-haproxy/openstack-haproxy_pre.rb
  test_post:
    cmd: ruby /etc/puppet/modules/osnailyfacter/modular/openstack-haproxy/openstack-haproxy-ironic_post.rb

