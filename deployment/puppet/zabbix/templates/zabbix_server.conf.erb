### Managed by Puppet ###
# This is config file for ZABBIX server process
# To get more information about ZABBIX,
# go http://www.zabbix.com

############ GENERAL PARAMETERS #################

# This defines unique NodeID in distributed setup,
# Default value 0 (standalone server)
# This parameter must be between 0 and 999
NodeID=<%= scope.lookupvar('zabbix::params::server_node_id') %>

# Number of pre-forked instances of pollers
# Default value is 5
# This parameter must be between 0 and 255
StartPollers=10

# Number of pre-forked instances of IPMI pollers
# Default value is 0
# This parameter must be between 0 and 255
#StartIPMIPollers=0

# Number of pre-forked instances of pollers for unreachable hosts
# Default value is 1
# This parameter must be between 0 and 255
#StartPollersUnreachable=1

# Number of pre-forked instances of trappers
# Default value is 5
# This parameter must be between 0 and 255
#StartTrappers=5

# Number of pre-forked instances of ICMP pingers
# Default value is 1
# This parameter must be between 0 and 255
#StartPingers=1

# Number of pre-forked instances of discoverers
# Default value is 1
# This parameter must be between 0 and 255
#StartDiscoverers=1

# Number of pre-forked instances of HTTP pollers
# Default value is 1
# This parameter must be between 0 and 255
#StartHTTPPollers=1

# Listen port for trapper. Default port number is 10051. This parameter
# must be between 1024 and 32767

ListenPort=<%= scope.lookupvar('zabbix::params::server_listen_port') %>

# Source IP address for outgouing connections
#SourceIP=

# Listen interface for trapper. Trapper will listen all network interfaces
# if this parameter is missing.

#ListenIP=127.0.0.1

# How often ZABBIX will perform housekeeping procedure
# (in hours)
# Default value is 1 hour
# Housekeeping is removing unnecessary information from
# tables history, alert, and alarms
# This parameter must be between 1 and 24

#HousekeepingFrequency=1

# How often ZABBIX will try to send unsent alerts
# (in seconds)
# Default value is 30 seconds
SenderFrequency=30

# Uncomment this line to disable housekeeping procedure
#DisableHousekeeping=1

# Specifies debug level
# 0 - debug is not created
# 1 - critical information
# 2 - error information
# 3 - warnings (default)
# 4 - for debugging (produces lots of information)

DebugLevel=3

# Specifies how long we wait for agent response (in sec)
# Must be between 1 and 30
Timeout=5

# Specifies how many seconds trapper may spend processing new data
# Must be between 1 and 30
#TrapperTimeout=5

# After how many seconds of unreachability treat a host as unavailable
#UnreachablePeriod=45

# How ofter check host for availability during the unreachability period
#UnavailableDelay=15

# How ofter check host for availability during the unavailability period
#UnavailableDelay=60

# Name of PID file

PidFile=/var/run/zabbix/zabbix_server.pid

# Name of log file
# If not set, syslog is used

#LogFile=<%= scope.lookupvar('zabbix::params::server_log_file') %>

# Maximum size of log file in MB. Set to 0 to disable automatic log rotation.
#LogFileSize=1

# Location for custom alert scripts
AlertScriptsPath=/home/zabbix/bin/

# Location of external scripts
#ExternalScripts=/etc/zabbix/externalscripts

# Location of fping. Default is /usr/sbin/fping
# Make sure that fping binary has root permissions and SUID flag set
#FpingLocation=/usr/sbin/fping

# Location of fping6. Default is /usr/sbin/fping6
# Make sure that fping binary has root permissions and SUID flag set
#Fping6Location=/usr/sbin/fping6

# Temporary directory. Default is /tmp
#TmpDir=/tmp

# Frequency of ICMP pings (item keys 'icmpping' and 'icmppingsec'). Defauls is 60 seconds.
#PingerFrequency=60

# Database host name
# Default is localhost

DBHost=<%= scope.lookupvar('zabbix::params::db_host') %>

# Database name
# SQLite3 note: path to database file must be provided. DBUser and DBPassword are ignored.
DBName=<%= scope.lookupvar('zabbix::params::db_name') %>

# Database user

DBUser=<%= scope.lookupvar('zabbix::params::db_user') %>

# Database password
# Comment this line if no password used

DBPassword=<%= scope.lookupvar('zabbix::params::db_password') %>

# Connect to MySQL using Unix socket?

#DBSocket=/var/run/mysqld/mysqld.sock
