ddns-updates on;
update-static-leases on;
ddns-domainname "<%= @domain_name %>";
ddns-update-style interim;
ignore client-updates;
update-static-leases true;

key <%= @ddns_key_name %> {
  algorithm <%= @ddns_key_algorithm %>;
  secret <%= @ddns_key %>;
}

local-address <%= @dns_address %>;
zone <%= @domain_name %>. {
  primary <%= @dns_address %>;
  key <%= @ddns_key_name %>;
}

allow booting;
allow bootp;
set vendorclass = option vendor-class-identifier;
option pxe-system-type code 93 = unsigned integer 16;
default-lease-time 3600;
max-lease-time 3600;
log-facility local7;

subnet <%= @network_address %> netmask <%= @network_mask %> {
  range <%= @start_address %> <%= @end_address %>;
  option domain-name-servers <%= @dns_address %>;
  option domain-name "<%= @domain_name %>";
  option subnet-mask <%= @network_mask %>;
  option routers <%= @router %>;
  option broadcast-address <%= @broadcast_address %>;
  next-server <%= @next_server %>;
  ddns-hostname = pick(option fqdn.hostname,option host-name, concat("dhcp-",binary-to-ascii(10,8,"-", leased-address)));
  class "pxeclients" {
    match if substring (option vendor-class-identifier, 0, 9) = "PXEClient";
      filename "pxelinux.0";
  }
}

<% if @known_hosts -%>
group {

  option domain-name-servers <%= @dns_address %>;
  option domain-name "<%= @domain_name %>";
  option subnet-mask <%= @network_mask %>;
  option routers <%= @router %>;
  option broadcast-address <%= @broadcast_address %>;
  next-server <%= @next_server %>;
  class "pxeclients" {
    match if substring (option vendor-class-identifier, 0, 9) = "PXEClient";
      filename "pxelinux.0";
  }

  <% @known_hosts.each do |host_name, host_data| -%>
  host <%= host_data['dhcp_binding_params']['name'] %> {
    hardware ethernet <%= host_data['dhcp_binding_params']['mac'] %>;
    fixed-address <%= host_data['dhcp_binding_params']['ip_address'] %>;
    ddns-hostname "<%= host_data['dhcp_binding_params']['name'].split('.')[0] %>";
    ddns-domainname "<%= @domain_name%>";
    option host-name "<%= host_data['dhcp_binding_params']['name'].split('.')[0] %>";
    option domain-name "<%= @domain_name %>";
  }
  <% end -%>
}
<% end -%>

include "<%= scope.lookupvar('::provision::params::dhcpd_conf_extra') %>";
