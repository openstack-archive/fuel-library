d-i debian-installer/locale string en_US.UTF-8

d-i debian-installer/splash boolean false

d-i console-setup/ask_detect        boolean false
d-i console-setup/layoutcode        string us
d-i console-setup/variantcode       string

# !!!! do not use netcfg/enable option because netcfg segfaults
# d-i netcfg/enable boolean false
d-i netcfg/choose_interface select auto

# by default we use dhcp but it is possible to set network
# configuration via kernel parameters
d-i netcfg/dhcp_timeout string 30
d-i netcfg/dhcp_failed note
d-i netcfg/dhcp_options select Configure network manually

# these lines must be added via system kopts
# d-i netcfg/get_hostname string nailgun
# d-i netcfg/get_domain string example.com

d-i hw-detect/load_firmware boolean true

d-i clock-setup/utc boolean true
d-i clock-setup/ntp boolean false
d-i time/zone string <%= @ks_system_timezone %>

$SNIPPET('ubuntu_network_console_and_syslog')

$SNIPPET('ubuntu_partition')

#set fuel_version=$getVar('fuel_version', '')
#if $fuel_version == '6.0'
d-i base-installer/kernel/image string linux-image-generic-lts-trusty
#else
d-i base-installer/kernel/image string linux-image-3.11
#end if


##########
# REPOS
##########

d-i mirror/protocol string http
d-i mirror/country string manual
d-i mirror/http/hostname string @@server@@:8080
d-i mirror/http/directory string /ubuntu/x86_64
d-i mirror/http/proxy string

d-i mirror/suite string precise
# Suite to use for loading installer components (optional).
d-i mirror/udeb/suite string precise
# Components to use for loading installer components (optional).
d-i mirror/udeb/components multiselect main, restricted
# Retry failed repo
d-i apt-setup/mirror/error select Retry
# Downloading a file failed
# d-i apt-setup/use_mirror select Retry

d-i apt-setup/restricted boolean true
d-i apt-setup/universe boolean true
d-i apt-setup/use_mirror boolean true
d-i apt-setup/security_host 127.0.0.1

d-i debian-installer/allow_unauthenticated boolean true

d-i console-setup/ask_detect boolean false
d-i keyboard-configuration/layoutcode string us
d-i keyboard-configuration/modelcode string SKIP

#if $varExists('repo_metadata')
# Additional repositories, local[0-9] available
#set counter_x = 0
#set repo_list = dict(item.split("=") for item in $repo_metadata.split(","))
#for $repo_name, $repo_url in $repo_list.items()
d-i apt-setup/local$counter_x/repository string $repo_url
d-i apt-setup/local$counter_x/comment string $repo_name
#set counter_x = $counter_x + 1
#end for
#end if

##########
# USERS
##########

# Allow root login
d-i passwd/root-login boolean true
d-i passwd/root-password-crypted password <%= @ks_encrypted_root_password %>

d-i passwd/make-user boolean false

############
# PACKAGES
############

tasksel tasksel/first multiselect standard

debconf debconf/frontend select Noninteractive

# d-i pkgsel/include string openssh-server debconf-utils
$SNIPPET('ubuntu_packages')
d-i pkgsel/language-packs multiselect en
d-i pkgsel/update-policy select none
d-i pkgsel/upgrade select none
d-i pkgsel/updatedb boolean true




d-i finish-install/keep-consoles    boolean false
d-i finish-install/reboot_in_progress       note

d-i cdrom-detect/eject boolean true

d-i debian-installer/exit/halt boolean false
d-i debian-installer/exit/poweroff boolean false


################
# LATE COMMANDS
################

# TODO:
# add puppet and mcollective configuration
# add network configuration
d-i preseed/late_command string true && \
$SNIPPET('ubuntu_partition_late')
$SNIPPET('ubuntu_disable_pxe') && \
$SNIPPET('ubuntu_network') && \
echo 'supersede routers 0;' > /target/etc/dhcp/dhclient.conf && \
$SNIPPET('cinder_create_lvm_group__ubuntu') && \
$SNIPPET('ubuntu_puppet_config') && \
$SNIPPET('ubuntu_mcollective_config') && \
$SNIPPET('ntp_to_masternode_ubuntu')
echo "nf_conntrack_ipv4" >> /target/etc/modules && \
echo "nf_conntrack_ipv6" >> /target/etc/modules && \
echo "net.nf_conntrack_max=1048576" >> /target/etc/sysctl.conf && \
mkdir -p /target/etc/nailgun-agent && \
#set nailgun_agent_conf = '/target/etc/nailgun-agent/config.yaml'
echo "---" > $nailgun_agent_conf && \
echo "url: '<%= scope.lookupvar('nailgun::cobbler::nailgun_api_url') %>'" >> $nailgun_agent_conf && \
echo target > /target/etc/nailgun_systemtype && \
echo 'APT::Get::AllowUnauthenticated 1;' > /target/etc/apt/apt.conf.d/02mirantis-allow-unsigned && \
# REPOSITORIES FROM Nailgun
#if $varExists('repo_metadata')
echo "" /target/etc/apt/sources.list && \
#set repo_list = dict(item.split("=") for item in $repo_metadata.split(","))
#for $repo_name, $repo_url in $repo_list.items()
echo 'deb $repo_url' >> /target/etc/apt/sources.list && \
#end for
#else
echo 'deb http://@@server@@:8080/ubuntu/x86_64 precise main' > /target/etc/apt/sources.list && \
#end if
$SNIPPET('ubuntu_authorized_keys')
sed -i -e "/^\s*GSSAPICleanupCredentials yes/d" -e "/^\s*GSSAPIAuthentication yes/d" -e "s/.*PasswordAuthentication\ .*/PasswordAuthentication\ no/g" -e "/UseDNS/d" /target/etc/ssh/sshd_config && \
echo "UseDNS no" >> /target/etc/ssh/sshd_config && \
#if $fuel_version == '6.0'
in-target apt-get -y install linux-headers-generic-lts-trusty && \
#else
in-target apt-get -y install linux-headers-3.11 && \
#end if
$SNIPPET('ubuntu_blacklist_i2c_piix4')
$SNIPPET('ubuntu_static_net')
$SNIPPET('ofed_install_with_sriov')
# Rsyslogd should send all messages to master node
$SNIPPET('target_logs_to_master_ubuntu')
true
